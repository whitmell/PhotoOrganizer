<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MetaDataExtractor.2.4.0.18625.Fakes</name>
    </assembly>
    <members>
        <member name="T:com.Fakes.ShimRun">
            <summary>Shim type of com.Run</summary>
        </member>
        <member name="M:com.Fakes.ShimRun.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.Fakes.ShimRun.#ctor(com.Run)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.Fakes.ShimRun.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.Fakes.ShimRun.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.Fakes.ShimRun.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.Fakes.ShimRun.Constructor">
            <summary>Sets the shim of Run.Run()</summary>
        </member>
        <member name="P:com.Fakes.ShimRun.FindAsXmlStringArray">
            <summary>Sets the shim of Run.FindAsXml(String[] someArgs)</summary>
        </member>
        <member name="P:com.Fakes.ShimRun.FindDoSubStringArray">
            <summary>Sets the shim of Run.FindDoSub(String[] someArgs)</summary>
        </member>
        <member name="P:com.Fakes.ShimRun.FindFileNamesStringArray">
            <summary>Sets the shim of Run.FindFileNames(String[] someArgs)</summary>
        </member>
        <member name="P:com.Fakes.ShimRun.FindNoUnknownStringArray">
            <summary>Sets the shim of Run.FindNoUnknown(String[] someArgs)</summary>
        </member>
        <member name="P:com.Fakes.ShimRun.MainStringArray">
            <summary>Sets the shim of Run.Main(String[] someArgs)</summary>
        </member>
        <member name="P:com.Fakes.ShimRun.StaticConstructor">
            <summary>Sets the shim of Run.Run()</summary>
        </member>
        <member name="T:com.Fakes.ShimRun.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.Fakes.ShimSimpleRun">
            <summary>Shim type of com.SimpleRun</summary>
        </member>
        <member name="M:com.Fakes.ShimSimpleRun.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.Fakes.ShimSimpleRun.#ctor(com.SimpleRun)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.Fakes.ShimSimpleRun.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.Fakes.ShimSimpleRun.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.Fakes.ShimSimpleRun.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.Fakes.ShimSimpleRun.Constructor">
            <summary>Sets the shim of SimpleRun.SimpleRun()</summary>
        </member>
        <member name="P:com.Fakes.ShimSimpleRun.ShowOneFileAllMetaDataAllTagString">
            <summary>Sets the shim of SimpleRun.ShowOneFileAllMetaDataAllTag(String aFileName)</summary>
        </member>
        <member name="P:com.Fakes.ShimSimpleRun.ShowOneFileOnlyIptcAllTagString">
            <summary>Sets the shim of SimpleRun.ShowOneFileOnlyIptcAllTag(String aFileName)</summary>
        </member>
        <member name="P:com.Fakes.ShimSimpleRun.ShowOneFileOnlyIptcOnlyTagTAG_HEADLINEString">
            <summary>Sets the shim of SimpleRun.ShowOneFileOnlyIptcOnlyTagTAG_HEADLINE(String aFileName)</summary>
        </member>
        <member name="T:com.Fakes.ShimSimpleRun.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.codec.jpeg.Fakes.ShimJPEGDecodeParam">
            <summary>Shim type of com.codec.jpeg.JPEGDecodeParam</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.ShimJPEGDecodeParam.#ctor(com.codec.jpeg.JPEGDecodeParam)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.ShimJPEGDecodeParam.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.ShimJPEGDecodeParam.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGDecodeParam.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGDecodeParam.Constructor">
            <summary>Sets the shim of JPEGDecodeParam.JPEGDecodeParam()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGDecodeParam.StaticConstructor">
            <summary>Sets the shim of JPEGDecodeParam.JPEGDecodeParam()</summary>
        </member>
        <member name="T:com.codec.jpeg.Fakes.ShimJPEGDecodeParam.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable">
            <summary>Shim type of com.codec.jpeg.JPEGHuffmanTable</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.#ctor(com.codec.jpeg.JPEGHuffmanTable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.Constructor">
            <summary>Sets the shim of JPEGHuffmanTable.JPEGHuffmanTable()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.ConstructorInt16ArrayInt16Array">
            <summary>Sets the shim of JPEGHuffmanTable.JPEGHuffmanTable(Int16[] lengths, Int16[] symbols)</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.GetLengths">
            <summary>Sets the shim of JPEGHuffmanTable.GetLengths()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.GetSymbols">
            <summary>Sets the shim of JPEGHuffmanTable.GetSymbols()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.InitStdACChrominance">
            <summary>Sets the shim of JPEGHuffmanTable.InitStdACChrominance()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.InitStdACLuminance">
            <summary>Sets the shim of JPEGHuffmanTable.InitStdACLuminance()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.InitStdDCChrominance">
            <summary>Sets the shim of JPEGHuffmanTable.InitStdDCChrominance()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.InitStdDCLuminance">
            <summary>Sets the shim of JPEGHuffmanTable.InitStdDCLuminance()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.StaticConstructor">
            <summary>Sets the shim of JPEGHuffmanTable.JPEGHuffmanTable()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.checkTable">
            <summary>Sets the shim of JPEGHuffmanTable.checkTable()</summary>
        </member>
        <member name="T:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.AllInstances.GetLengths">
            <summary>Sets the shim of JPEGHuffmanTable.GetLengths()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.AllInstances.GetSymbols">
            <summary>Sets the shim of JPEGHuffmanTable.GetSymbols()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGHuffmanTable.AllInstances.checkTable">
            <summary>Sets the shim of JPEGHuffmanTable.checkTable()</summary>
        </member>
        <member name="T:com.codec.jpeg.Fakes.ShimJPEGQTable">
            <summary>Shim type of com.codec.jpeg.JPEGQTable</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.ShimJPEGQTable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.ShimJPEGQTable.#ctor(com.codec.jpeg.JPEGQTable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.ShimJPEGQTable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.ShimJPEGQTable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGQTable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGQTable.Constructor">
            <summary>Sets the shim of JPEGQTable.JPEGQTable()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGQTable.ConstructorInt32Array">
            <summary>Sets the shim of JPEGQTable.JPEGQTable(Int32[] table)</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGQTable.GetScaledInstanceSingleBoolean">
            <summary>Sets the shim of JPEGQTable.GetScaledInstance(Single scaleFactor, Boolean forceBaseline)</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGQTable.GetTable">
            <summary>Sets the shim of JPEGQTable.GetTable()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGQTable.InitStdChrominance">
            <summary>Sets the shim of JPEGQTable.InitStdChrominance()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGQTable.InitStdLuminance">
            <summary>Sets the shim of JPEGQTable.InitStdLuminance()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGQTable.StaticConstructor">
            <summary>Sets the shim of JPEGQTable.JPEGQTable()</summary>
        </member>
        <member name="T:com.codec.jpeg.Fakes.ShimJPEGQTable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGQTable.AllInstances.GetScaledInstanceSingleBoolean">
            <summary>Sets the shim of JPEGQTable.GetScaledInstance(Single scaleFactor, Boolean forceBaseline)</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.ShimJPEGQTable.AllInstances.GetTable">
            <summary>Sets the shim of JPEGQTable.GetTable()</summary>
        </member>
        <member name="T:com.codec.jpeg.Fakes.StubJPEGDecodeParam">
            <summary>Stub type of com.codec.jpeg.JPEGDecodeParam</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetACHuffmanComponentMapping(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetACHuffmanComponentMapping(Int32 component)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetACHuffmanComponentMappingInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetACHuffmanComponentMapping(Int32 component)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetACHuffmanTable(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetACHuffmanTable(Int32 tableNum)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetACHuffmanTableForComponent(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetACHuffmanTableForComponent(Int32 component)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetACHuffmanTableForComponentInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetACHuffmanTableForComponent(Int32 component)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetACHuffmanTableInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetACHuffmanTable(Int32 tableNum)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetDCHuffmanComponentMapping(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetDCHuffmanComponentMapping(Int32 component)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetDCHuffmanComponentMappingInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetDCHuffmanComponentMapping(Int32 component)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetDCHuffmanTable(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetDCHuffmanTable(Int32 tableNum)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetDCHuffmanTableForComponent(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetDCHuffmanTableForComponent(Int32 component)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetDCHuffmanTableForComponentInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetDCHuffmanTableForComponent(Int32 component)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetDCHuffmanTableInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetDCHuffmanTable(Int32 tableNum)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetDensityUnit">
            <summary>Sets the stub of JPEGDecodeParam.GetDensityUnit()</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetDensityUnit01">
            <summary>Sets the stub of JPEGDecodeParam.GetDensityUnit()</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetEncodedColorID">
            <summary>Sets the stub of JPEGDecodeParam.GetEncodedColorID()</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetEncodedColorID01">
            <summary>Sets the stub of JPEGDecodeParam.GetEncodedColorID()</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetHeight">
            <summary>Sets the stub of JPEGDecodeParam.GetHeight()</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetHeight01">
            <summary>Sets the stub of JPEGDecodeParam.GetHeight()</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetHorizontalSubsampling(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetHorizontalSubsampling(Int32 component)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetHorizontalSubsamplingInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetHorizontalSubsampling(Int32 component)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetMarker(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetMarker(Int32 marker)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetMarkerData(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetMarkerData(Int32 marker)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetMarkerDataInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetMarkerData(Int32 marker)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetMarkerInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetMarker(Int32 marker)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetNumComponents">
            <summary>Sets the stub of JPEGDecodeParam.GetNumComponents()</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetNumComponents01">
            <summary>Sets the stub of JPEGDecodeParam.GetNumComponents()</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetQTable(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetQTable(Int32 tableNum)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetQTableComponentMapping(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetQTableComponentMapping(Int32 component)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetQTableComponentMappingInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetQTableComponentMapping(Int32 component)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetQTableForComponent(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetQTableForComponent(Int32 component)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetQTableForComponentInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetQTableForComponent(Int32 component)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetQTableInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetQTable(Int32 tableNum)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetRestartInterval">
            <summary>Sets the stub of JPEGDecodeParam.GetRestartInterval()</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetRestartInterval01">
            <summary>Sets the stub of JPEGDecodeParam.GetRestartInterval()</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetVerticalSubsampling(System.Int32)">
            <summary>Sets the stub of JPEGDecodeParam.GetVerticalSubsampling(Int32 component)</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetVerticalSubsamplingInt32">
            <summary>Sets the stub of JPEGDecodeParam.GetVerticalSubsampling(Int32 component)</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetWidth">
            <summary>Sets the stub of JPEGDecodeParam.GetWidth()</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetWidth01">
            <summary>Sets the stub of JPEGDecodeParam.GetWidth()</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetXDensity">
            <summary>Sets the stub of JPEGDecodeParam.GetXDensity()</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetXDensity01">
            <summary>Sets the stub of JPEGDecodeParam.GetXDensity()</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.GetYDensity">
            <summary>Sets the stub of JPEGDecodeParam.getYDensity()</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.InitializeStub">
            <summary>Initializes a new instance of type StubJPEGDecodeParam</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.IsImageInfoValid">
            <summary>Sets the stub of JPEGDecodeParam.IsImageInfoValid()</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.IsImageInfoValid01">
            <summary>Sets the stub of JPEGDecodeParam.IsImageInfoValid()</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.IsTableInfoValid">
            <summary>Sets the stub of JPEGDecodeParam.IsTableInfoValid()</summary>
        </member>
        <member name="F:com.codec.jpeg.Fakes.StubJPEGDecodeParam.IsTableInfoValid01">
            <summary>Sets the stub of JPEGDecodeParam.IsTableInfoValid()</summary>
        </member>
        <member name="M:com.codec.jpeg.Fakes.StubJPEGDecodeParam.getYDensity">
            <summary>Sets the stub of JPEGDecodeParam.getYDensity()</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.StubJPEGDecodeParam.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.StubJPEGDecodeParam.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.codec.jpeg.Fakes.StubJPEGDecodeParam.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.imaging.jpg.Fakes.ShimJpegMetadataReader">
            <summary>Shim type of com.drew.imaging.jpg.JpegMetadataReader</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegMetadataReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegMetadataReader.#ctor(com.drew.imaging.jpg.JpegMetadataReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegMetadataReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegMetadataReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegMetadataReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegMetadataReader.Constructor">
            <summary>Sets the shim of JpegMetadataReader.JpegMetadataReader()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegMetadataReader.ExtractJpegSegmentReaderMetadataJpegSegmentReader">
            <summary>Sets the shim of JpegMetadataReader.ExtractJpegSegmentReaderMetadata(JpegSegmentReader aSegmentReader)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegMetadataReader.ReadMetadataFileInfo">
            <summary>Sets the shim of JpegMetadataReader.ReadMetadata(FileInfo aFile)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegMetadataReader.ReadMetadataJPEGDecodeParam">
            <summary>Sets the shim of JpegMetadataReader.ReadMetadata(JPEGDecodeParam aDecodeParam)</summary>
        </member>
        <member name="T:com.drew.imaging.jpg.Fakes.ShimJpegMetadataReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.imaging.jpg.Fakes.ShimJpegProcessingException">
            <summary>Shim type of com.drew.imaging.jpg.JpegProcessingException</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegProcessingException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegProcessingException.#ctor(com.drew.imaging.jpg.JpegProcessingException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegProcessingException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegProcessingException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegProcessingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegProcessingException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegProcessingException.ConstructorException">
            <summary>Sets the shim of JpegProcessingException.JpegProcessingException(Exception aCause)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegProcessingException.ConstructorString">
            <summary>Sets the shim of JpegProcessingException.JpegProcessingException(String aMessage)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegProcessingException.ConstructorStringException">
            <summary>Sets the shim of JpegProcessingException.JpegProcessingException(String aMessage, Exception aCause)</summary>
        </member>
        <member name="T:com.drew.imaging.jpg.Fakes.ShimJpegProcessingException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData">
            <summary>Shim type of com.drew.imaging.jpg.JpegSegmentData</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.#ctor(com.drew.imaging.jpg.JpegSegmentData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.AddSegmentByteByteArray">
            <summary>Sets the shim of JpegSegmentData.AddSegment(Byte aSegmentMarker, Byte[] aSegmentBytes)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.Constructor">
            <summary>Sets the shim of JpegSegmentData.JpegSegmentData()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.ContainsSegmentByte">
            <summary>Sets the shim of JpegSegmentData.ContainsSegment(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.FromFileString">
            <summary>Sets the shim of JpegSegmentData.FromFile(String aFileName)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.GetOrCreateSegmentListByte">
            <summary>Sets the shim of JpegSegmentData.GetOrCreateSegmentList(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.GetSegmentByte">
            <summary>Sets the shim of JpegSegmentData.GetSegment(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.GetSegmentByteInt32">
            <summary>Sets the shim of JpegSegmentData.GetSegment(Byte aSegmentMarker, Int32 anOccurrence)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.GetSegmentCountByte">
            <summary>Sets the shim of JpegSegmentData.GetSegmentCount(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.GetSegmentListByte">
            <summary>Sets the shim of JpegSegmentData.GetSegmentList(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.RemoveSegmentByte">
            <summary>Sets the shim of JpegSegmentData.RemoveSegment(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.RemoveSegmentOccurrenceByteInt32">
            <summary>Sets the shim of JpegSegmentData.RemoveSegmentOccurrence(Byte aSegmentMarker, Int32 anOccurrence)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.ToFileStringJpegSegmentData">
            <summary>Sets the shim of JpegSegmentData.ToFile(String aFileName, JpegSegmentData aSegmentData)</summary>
        </member>
        <member name="T:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.AllInstances.AddSegmentByteByteArray">
            <summary>Sets the shim of JpegSegmentData.AddSegment(Byte aSegmentMarker, Byte[] aSegmentBytes)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.AllInstances.ContainsSegmentByte">
            <summary>Sets the shim of JpegSegmentData.ContainsSegment(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.AllInstances.GetOrCreateSegmentListByte">
            <summary>Sets the shim of JpegSegmentData.GetOrCreateSegmentList(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.AllInstances.GetSegmentByte">
            <summary>Sets the shim of JpegSegmentData.GetSegment(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.AllInstances.GetSegmentByteInt32">
            <summary>Sets the shim of JpegSegmentData.GetSegment(Byte aSegmentMarker, Int32 anOccurrence)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.AllInstances.GetSegmentCountByte">
            <summary>Sets the shim of JpegSegmentData.GetSegmentCount(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.AllInstances.GetSegmentListByte">
            <summary>Sets the shim of JpegSegmentData.GetSegmentList(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.AllInstances.RemoveSegmentByte">
            <summary>Sets the shim of JpegSegmentData.RemoveSegment(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentData.AllInstances.RemoveSegmentOccurrenceByteInt32">
            <summary>Sets the shim of JpegSegmentData.RemoveSegmentOccurrence(Byte aSegmentMarker, Int32 anOccurrence)</summary>
        </member>
        <member name="T:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader">
            <summary>Shim type of com.drew.imaging.jpg.JpegSegmentReader</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.#ctor(com.drew.imaging.jpg.JpegSegmentReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.Close">
            <summary>Sets the shim of JpegSegmentReader.Close()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.ConstructorByteArray">
            <summary>Sets the shim of JpegSegmentReader.JpegSegmentReader(Byte[] aFileContents)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.ConstructorFileInfo">
            <summary>Sets the shim of JpegSegmentReader.JpegSegmentReader(FileInfo aFile)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.ConstructorStream">
            <summary>Sets the shim of JpegSegmentReader.JpegSegmentReader(Stream aStream)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.Dispose">
            <summary>Sets the shim of JpegSegmentReader.Dispose()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.GetJpegInputStream">
            <summary>Sets the shim of JpegSegmentReader.GetJpegInputStream()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.GetSegmentCountByte">
            <summary>Sets the shim of JpegSegmentReader.GetSegmentCount(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.IsValidJpegHeaderBytesBufferedStream">
            <summary>Sets the shim of JpegSegmentReader.IsValidJpegHeaderBytes(BufferedStream aFileStream)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.ReadSegmentByte">
            <summary>Sets the shim of JpegSegmentReader.ReadSegment(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.ReadSegmentByteInt32">
            <summary>Sets the shim of JpegSegmentReader.ReadSegment(Byte aSegmentMarker, Int32 anOccurrence)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.ReadSegments">
            <summary>Sets the shim of JpegSegmentReader.ReadSegments()</summary>
        </member>
        <member name="T:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.AllInstances.Close">
            <summary>Sets the shim of JpegSegmentReader.Close()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.AllInstances.Dispose">
            <summary>Sets the shim of JpegSegmentReader.Dispose()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.AllInstances.GetJpegInputStream">
            <summary>Sets the shim of JpegSegmentReader.GetJpegInputStream()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.AllInstances.GetSegmentCountByte">
            <summary>Sets the shim of JpegSegmentReader.GetSegmentCount(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.AllInstances.IsValidJpegHeaderBytesBufferedStream">
            <summary>Sets the shim of JpegSegmentReader.IsValidJpegHeaderBytes(BufferedStream aFileStream)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.AllInstances.ReadSegmentByte">
            <summary>Sets the shim of JpegSegmentReader.ReadSegment(Byte aSegmentMarker)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.AllInstances.ReadSegmentByteInt32">
            <summary>Sets the shim of JpegSegmentReader.ReadSegment(Byte aSegmentMarker, Int32 anOccurrence)</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.ShimJpegSegmentReader.AllInstances.ReadSegments">
            <summary>Sets the shim of JpegSegmentReader.ReadSegments()</summary>
        </member>
        <member name="T:com.drew.imaging.jpg.Fakes.StubJpegProcessingException">
            <summary>Stub type of com.drew.imaging.jpg.JpegProcessingException</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubJpegProcessingException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubJpegProcessingException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.InitializeStub">
            <summary>Initializes a new instance of type StubJpegProcessingException</summary>
        </member>
        <member name="F:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegProcessingException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:com.drew.imaging.jpg.Fakes.StubJpegSegmentData">
            <summary>Stub type of com.drew.imaging.jpg.JpegSegmentData</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegSegmentData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegSegmentData.InitializeStub">
            <summary>Initializes a new instance of type StubJpegSegmentData</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegSegmentData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegSegmentData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegSegmentData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.imaging.jpg.Fakes.StubJpegSegmentReader">
            <summary>Stub type of com.drew.imaging.jpg.JpegSegmentReader</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegSegmentReader.#ctor(System.IO.FileInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegSegmentReader.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegSegmentReader.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.imaging.jpg.Fakes.StubJpegSegmentReader.InitializeStub">
            <summary>Initializes a new instance of type StubJpegSegmentReader</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegSegmentReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegSegmentReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.imaging.jpg.Fakes.StubJpegSegmentReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.imaging.tiff.Fakes.ShimTiffMetadataReader">
            <summary>Shim type of com.drew.imaging.tiff.TiffMetadataReader</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.ShimTiffMetadataReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.ShimTiffMetadataReader.#ctor(com.drew.imaging.tiff.TiffMetadataReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.ShimTiffMetadataReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.ShimTiffMetadataReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.ShimTiffMetadataReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.ShimTiffMetadataReader.Constructor">
            <summary>Sets the shim of TiffMetadataReader.TiffMetadataReader()</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.ShimTiffMetadataReader.ReadMetadataFileInfo">
            <summary>Sets the shim of TiffMetadataReader.ReadMetadata(FileInfo aFile)</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.ShimTiffMetadataReader.ReadMetadataStream">
            <summary>Sets the shim of TiffMetadataReader.ReadMetadata(Stream aStream)</summary>
        </member>
        <member name="T:com.drew.imaging.tiff.Fakes.ShimTiffMetadataReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.imaging.tiff.Fakes.ShimTiffProcessingException">
            <summary>Shim type of com.drew.imaging.tiff.TiffProcessingException</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.ShimTiffProcessingException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.ShimTiffProcessingException.#ctor(com.drew.imaging.tiff.TiffProcessingException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.ShimTiffProcessingException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.ShimTiffProcessingException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.ShimTiffProcessingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.ShimTiffProcessingException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.ShimTiffProcessingException.ConstructorException">
            <summary>Sets the shim of TiffProcessingException.TiffProcessingException(Exception aCause)</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.ShimTiffProcessingException.ConstructorString">
            <summary>Sets the shim of TiffProcessingException.TiffProcessingException(String aMessage)</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.ShimTiffProcessingException.ConstructorStringException">
            <summary>Sets the shim of TiffProcessingException.TiffProcessingException(String aMessage, Exception aCause)</summary>
        </member>
        <member name="T:com.drew.imaging.tiff.Fakes.ShimTiffProcessingException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.imaging.tiff.Fakes.StubTiffProcessingException">
            <summary>Stub type of com.drew.imaging.tiff.TiffProcessingException</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTiffProcessingException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTiffProcessingException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.InitializeStub">
            <summary>Initializes a new instance of type StubTiffProcessingException</summary>
        </member>
        <member name="F:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:com.drew.imaging.tiff.Fakes.StubTiffProcessingException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:com.drew.lang.Fakes.ShimCompoundException">
            <summary>Shim type of com.drew.lang.CompoundException</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.ShimCompoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.ShimCompoundException.#ctor(com.drew.lang.CompoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.ShimCompoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.ShimCompoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.ShimCompoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimCompoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimCompoundException.ConstructorException">
            <summary>Sets the shim of CompoundException.CompoundException(Exception aCause)</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimCompoundException.ConstructorString">
            <summary>Sets the shim of CompoundException.CompoundException(String aMessage)</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimCompoundException.ConstructorStringException">
            <summary>Sets the shim of CompoundException.CompoundException(String aMessage, Exception aCause)</summary>
        </member>
        <member name="T:com.drew.lang.Fakes.ShimCompoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.lang.Fakes.ShimRational">
            <summary>Shim type of com.drew.lang.Rational</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.ShimRational.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.ShimRational.#ctor(com.drew.lang.Rational)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.ShimRational.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.ShimRational.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.ByteValue">
            <summary>Sets the shim of Rational.ByteValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.ConstructorInt32Int32">
            <summary>Sets the shim of Rational.Rational(Int32 aNumerator, Int32 aDenominator)</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.DoubleValue">
            <summary>Sets the shim of Rational.DoubleValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.EqualsObject">
            <summary>Sets the shim of Rational.Equals(Object anObject)</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.FloatValue">
            <summary>Sets the shim of Rational.FloatValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.GetDenominator">
            <summary>Sets the shim of Rational.GetDenominator()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.GetHashCode">
            <summary>Sets the shim of Rational.GetHashCode()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.GetNumerator">
            <summary>Sets the shim of Rational.GetNumerator()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.GetReciprocal">
            <summary>Sets the shim of Rational.GetReciprocal()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.GetSimplifiedInstance">
            <summary>Sets the shim of Rational.GetSimplifiedInstance()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.IntValue">
            <summary>Sets the shim of Rational.IntValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.IsInteger">
            <summary>Sets the shim of Rational.IsInteger()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.LongValue">
            <summary>Sets the shim of Rational.LongValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.ShortValue">
            <summary>Sets the shim of Rational.ShortValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.ToSimpleStringBoolean">
            <summary>Sets the shim of Rational.ToSimpleString(Boolean isAllowDecimal)</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.ToString">
            <summary>Sets the shim of Rational.ToString()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.TooComplexForSimplification">
            <summary>Sets the shim of Rational.TooComplexForSimplification()</summary>
        </member>
        <member name="T:com.drew.lang.Fakes.ShimRational.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.ByteValue">
            <summary>Sets the shim of Rational.ByteValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.DoubleValue">
            <summary>Sets the shim of Rational.DoubleValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.EqualsObject">
            <summary>Sets the shim of Rational.Equals(Object anObject)</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.FloatValue">
            <summary>Sets the shim of Rational.FloatValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.GetDenominator">
            <summary>Sets the shim of Rational.GetDenominator()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.GetHashCode01">
            <summary>Sets the shim of Rational.GetHashCode()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.GetNumerator">
            <summary>Sets the shim of Rational.GetNumerator()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.GetReciprocal">
            <summary>Sets the shim of Rational.GetReciprocal()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.GetSimplifiedInstance">
            <summary>Sets the shim of Rational.GetSimplifiedInstance()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.IntValue">
            <summary>Sets the shim of Rational.IntValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.IsInteger">
            <summary>Sets the shim of Rational.IsInteger()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.LongValue">
            <summary>Sets the shim of Rational.LongValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.ShortValue">
            <summary>Sets the shim of Rational.ShortValue()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.ToSimpleStringBoolean">
            <summary>Sets the shim of Rational.ToSimpleString(Boolean isAllowDecimal)</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.ToString01">
            <summary>Sets the shim of Rational.ToString()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.ShimRational.AllInstances.TooComplexForSimplification">
            <summary>Sets the shim of Rational.TooComplexForSimplification()</summary>
        </member>
        <member name="T:com.drew.lang.Fakes.StubCompoundException">
            <summary>Stub type of com.drew.lang.CompoundException</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubCompoundException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubCompoundException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubCompoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubCompoundException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubCompoundException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubCompoundException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubCompoundException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubCompoundException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubCompoundException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubCompoundException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubCompoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubCompoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubCompoundException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubCompoundException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubCompoundException.InitializeStub">
            <summary>Initializes a new instance of type StubCompoundException</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubCompoundException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubCompoundException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubCompoundException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubCompoundException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubCompoundException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubCompoundException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.StubCompoundException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.StubCompoundException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.StubCompoundException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.StubCompoundException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.StubCompoundException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.StubCompoundException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.StubCompoundException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.StubCompoundException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:com.drew.lang.Fakes.StubRational">
            <summary>Stub type of com.drew.lang.Rational</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubRational.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubRational.Equals(System.Object)">
            <summary>Sets the stub of Rational.Equals(Object anObject)</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubRational.EqualsObject">
            <summary>Sets the stub of Rational.Equals(Object anObject)</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubRational.GetHashCode">
            <summary>Sets the stub of Rational.GetHashCode()</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubRational.GetHashCode01">
            <summary>Sets the stub of Rational.GetHashCode()</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubRational.InitializeStub">
            <summary>Initializes a new instance of type StubRational</summary>
        </member>
        <member name="M:com.drew.lang.Fakes.StubRational.ToString">
            <summary>Sets the stub of Rational.ToString()</summary>
        </member>
        <member name="F:com.drew.lang.Fakes.StubRational.ToString01">
            <summary>Sets the stub of Rational.ToString()</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.StubRational.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.StubRational.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.lang.Fakes.StubRational.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimAbstractDirectory">
            <summary>Shim type of com.drew.metadata.AbstractDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractDirectory.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.BundleNameGet">
            <summary>Sets the shim of AbstractDirectory.get_BundleName()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.BundleNameSetString">
            <summary>Sets the shim of AbstractDirectory.set_BundleName(String value)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.Constructor">
            <summary>Sets the shim of AbstractDirectory.AbstractDirectory()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.ConstructorString">
            <summary>Sets the shim of AbstractDirectory.AbstractDirectory(String aBundleName)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.ContainsTagInt32">
            <summary>Sets the shim of AbstractDirectory.ContainsTag(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.FillTagMapTypeIResourceBundle">
            <summary>Sets the shim of AbstractDirectory.FillTagMap(Type aType, IResourceBundle aBundle)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetBooleanInt32">
            <summary>Sets the shim of AbstractDirectory.GetBoolean(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetByteArrayInt32">
            <summary>Sets the shim of AbstractDirectory.GetByteArray(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetDateInt32">
            <summary>Sets the shim of AbstractDirectory.GetDate(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetDescriptionInt32">
            <summary>Sets the shim of AbstractDirectory.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetDoubleInt32">
            <summary>Sets the shim of AbstractDirectory.GetDouble(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetFloatInt32">
            <summary>Sets the shim of AbstractDirectory.GetFloat(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetIntArrayInt32">
            <summary>Sets the shim of AbstractDirectory.GetIntArray(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetIntInt32">
            <summary>Sets the shim of AbstractDirectory.GetInt(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetLongInt32">
            <summary>Sets the shim of AbstractDirectory.GetLong(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetName">
            <summary>Sets the shim of AbstractDirectory.GetName()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetObjectInt32">
            <summary>Sets the shim of AbstractDirectory.GetObject(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetRationalArrayInt32">
            <summary>Sets the shim of AbstractDirectory.GetRationalArray(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetRationalInt32">
            <summary>Sets the shim of AbstractDirectory.GetRational(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetStringArrayInt32">
            <summary>Sets the shim of AbstractDirectory.GetStringArray(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetStringInt32">
            <summary>Sets the shim of AbstractDirectory.GetString(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetTagCount">
            <summary>Sets the shim of AbstractDirectory.GetTagCount()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetTagIterator">
            <summary>Sets the shim of AbstractDirectory.GetTagIterator()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.GetTagNameInt32">
            <summary>Sets the shim of AbstractDirectory.GetTagName(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.HasErrorGet">
            <summary>Sets the shim of AbstractDirectory.get_HasError()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.HasErrorSetBoolean">
            <summary>Sets the shim of AbstractDirectory.set_HasError(Boolean value)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.ParseDateString">
            <summary>Sets the shim of AbstractDirectory.ParseDate(String aDate)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.SetDescriptorAbstractTagDescriptor">
            <summary>Sets the shim of AbstractDirectory.SetDescriptor(AbstractTagDescriptor aDescriptor)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the shim of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.SetObjectInt32Object">
            <summary>Sets the shim of AbstractDirectory.SetObject(Int32 aTagType, Object aValue)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.StaticConstructor">
            <summary>Sets the shim of AbstractDirectory.AbstractDirectory()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.SystemCollectionsGenericIEnumerablecomdrewmetadataTagGetEnumerator">
            <summary>Sets the shim of AbstractDirectory.System.Collections.Generic.IEnumerable&lt;com.drew.metadata.Tag&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of AbstractDirectory.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.BundleNameGet">
            <summary>Sets the shim of AbstractDirectory.get_BundleName()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.BundleNameSetString">
            <summary>Sets the shim of AbstractDirectory.set_BundleName(String value)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.ContainsTagInt32">
            <summary>Sets the shim of AbstractDirectory.ContainsTag(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetBooleanInt32">
            <summary>Sets the shim of AbstractDirectory.GetBoolean(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetByteArrayInt32">
            <summary>Sets the shim of AbstractDirectory.GetByteArray(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetDateInt32">
            <summary>Sets the shim of AbstractDirectory.GetDate(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of AbstractDirectory.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetDoubleInt32">
            <summary>Sets the shim of AbstractDirectory.GetDouble(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetFloatInt32">
            <summary>Sets the shim of AbstractDirectory.GetFloat(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetIntArrayInt32">
            <summary>Sets the shim of AbstractDirectory.GetIntArray(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetIntInt32">
            <summary>Sets the shim of AbstractDirectory.GetInt(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetLongInt32">
            <summary>Sets the shim of AbstractDirectory.GetLong(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetName">
            <summary>Sets the shim of AbstractDirectory.GetName()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetObjectInt32">
            <summary>Sets the shim of AbstractDirectory.GetObject(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetRationalArrayInt32">
            <summary>Sets the shim of AbstractDirectory.GetRationalArray(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetRationalInt32">
            <summary>Sets the shim of AbstractDirectory.GetRational(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetStringArrayInt32">
            <summary>Sets the shim of AbstractDirectory.GetStringArray(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetStringInt32">
            <summary>Sets the shim of AbstractDirectory.GetString(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetTagCount">
            <summary>Sets the shim of AbstractDirectory.GetTagCount()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetTagIterator">
            <summary>Sets the shim of AbstractDirectory.GetTagIterator()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.GetTagNameInt32">
            <summary>Sets the shim of AbstractDirectory.GetTagName(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.HasErrorGet">
            <summary>Sets the shim of AbstractDirectory.get_HasError()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.HasErrorSetBoolean">
            <summary>Sets the shim of AbstractDirectory.set_HasError(Boolean value)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.SetDescriptorAbstractTagDescriptor">
            <summary>Sets the shim of AbstractDirectory.SetDescriptor(AbstractTagDescriptor aDescriptor)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.SetIntArrayInt32Int32Array">
            <summary>Sets the shim of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.SetObjectInt32Object">
            <summary>Sets the shim of AbstractDirectory.SetObject(Int32 aTagType, Object aValue)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.SystemCollectionsGenericIEnumerablecomdrewmetadataTagGetEnumerator">
            <summary>Sets the shim of AbstractDirectory.System.Collections.Generic.IEnumerable&lt;com.drew.metadata.Tag&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractDirectory.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of AbstractDirectory.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimAbstractMetadataReader">
            <summary>Shim type of com.drew.metadata.AbstractMetadataReader</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractMetadataReader.#ctor(com.drew.metadata.AbstractMetadataReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractMetadataReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractMetadataReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractMetadataReader.Bind(com.drew.metadata.IMetadataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractMetadataReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractMetadataReader.ConstructorByteArray">
            <summary>Sets the shim of AbstractMetadataReader.AbstractMetadataReader(Byte[] aData)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractMetadataReader.ConstructorFileInfoByte">
            <summary>Sets the shim of AbstractMetadataReader.AbstractMetadataReader(FileInfo aFile, Byte aSegment)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractMetadataReader.Extract">
            <summary>Sets the shim of AbstractMetadataReader.Extract()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractMetadataReader.Get16BitsInt32">
            <summary>Sets the shim of AbstractMetadataReader.Get16Bits(Int32 anOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractMetadataReader.Get32BitsInt32">
            <summary>Sets the shim of AbstractMetadataReader.Get32Bits(Int32 anOffset)</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimAbstractMetadataReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractMetadataReader.AllInstances.Extract">
            <summary>Sets the shim of AbstractMetadataReader.Extract()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractMetadataReader.AllInstances.Get16BitsInt32">
            <summary>Sets the shim of AbstractMetadataReader.Get16Bits(Int32 anOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractMetadataReader.AllInstances.Get32BitsInt32">
            <summary>Sets the shim of AbstractMetadataReader.Get32Bits(Int32 anOffset)</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimAbstractTagDescriptor">
            <summary>Shim type of com.drew.metadata.AbstractTagDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractTagDescriptor.#ctor(com.drew.metadata.AbstractTagDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractTagDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimAbstractTagDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractTagDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractTagDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of AbstractTagDescriptor.AbstractTagDescriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimAbstractTagDescriptor.StaticConstructor">
            <summary>Sets the shim of AbstractTagDescriptor.AbstractTagDescriptor()</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimAbstractTagDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimMetadata">
            <summary>Shim type of com.drew.metadata.Metadata</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimMetadata.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimMetadata.#ctor(com.drew.metadata.Metadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimMetadata.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimMetadata.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.AbstractDirectory})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.Constructor">
            <summary>Sets the shim of Metadata.Metadata()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.ContainsDirectoryType">
            <summary>Sets the shim of Metadata.ContainsDirectory(Type aType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.GetDirectoryIterator">
            <summary>Sets the shim of Metadata.GetDirectoryIterator()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.GetDirectoryString">
            <summary>Sets the shim of Metadata.GetDirectory(String aTypeStr)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.SystemCollectionsGenericIEnumerablecomdrewmetadataAbstractDirectoryGetEnumerator">
            <summary>Sets the shim of Metadata.System.Collections.Generic.IEnumerable&lt;com.drew.metadata.AbstractDirectory&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Metadata.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.AllInstances.ContainsDirectoryType">
            <summary>Sets the shim of Metadata.ContainsDirectory(Type aType)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.AllInstances.GetDirectoryIterator">
            <summary>Sets the shim of Metadata.GetDirectoryIterator()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.AllInstances.GetDirectoryString">
            <summary>Sets the shim of Metadata.GetDirectory(String aTypeStr)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.AllInstances.SystemCollectionsGenericIEnumerablecomdrewmetadataAbstractDirectoryGetEnumerator">
            <summary>Sets the shim of Metadata.System.Collections.Generic.IEnumerable&lt;com.drew.metadata.AbstractDirectory&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadata.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Metadata.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimMetadataException">
            <summary>Shim type of com.drew.metadata.MetadataException</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimMetadataException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimMetadataException.#ctor(com.drew.metadata.MetadataException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimMetadataException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimMetadataException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimMetadataException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadataException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadataException.ConstructorException">
            <summary>Sets the shim of MetadataException.MetadataException(Exception aCause)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadataException.ConstructorString">
            <summary>Sets the shim of MetadataException.MetadataException(String aMessage)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimMetadataException.ConstructorStringException">
            <summary>Sets the shim of MetadataException.MetadataException(String aMessage, Exception aCause)</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimMetadataException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimTag">
            <summary>Shim type of com.drew.metadata.Tag</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimTag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimTag.#ctor(com.drew.metadata.Tag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimTag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.ShimTag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.ConstructorInt32AbstractDirectory">
            <summary>Sets the shim of Tag.Tag(Int32 aTagType, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.GetDescription">
            <summary>Sets the shim of Tag.GetDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.GetDirectoryName">
            <summary>Sets the shim of Tag.GetDirectoryName()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.GetTagName">
            <summary>Sets the shim of Tag.GetTagName()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.GetTagType">
            <summary>Sets the shim of Tag.GetTagType()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.GetTagTypeHex">
            <summary>Sets the shim of Tag.GetTagTypeHex()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.GetTagValue">
            <summary>Sets the shim of Tag.GetTagValue()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.ToString">
            <summary>Sets the shim of Tag.ToString()</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.ShimTag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.AllInstances.GetDescription">
            <summary>Sets the shim of Tag.GetDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.AllInstances.GetDirectoryName">
            <summary>Sets the shim of Tag.GetDirectoryName()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.AllInstances.GetTagName">
            <summary>Sets the shim of Tag.GetTagName()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.AllInstances.GetTagType">
            <summary>Sets the shim of Tag.GetTagType()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.AllInstances.GetTagTypeHex">
            <summary>Sets the shim of Tag.GetTagTypeHex()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.AllInstances.GetTagValue">
            <summary>Sets the shim of Tag.GetTagValue()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.ShimTag.AllInstances.ToString01">
            <summary>Sets the shim of Tag.ToString()</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.StubAbstractDirectory">
            <summary>Stub type of com.drew.metadata.AbstractDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractDirectory.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubAbstractDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubAbstractDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubAbstractDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubAbstractDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.StubAbstractMetadataReader">
            <summary>Stub type of com.drew.metadata.AbstractMetadataReader</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractMetadataReader.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractMetadataReader.#ctor(System.IO.FileInfo,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractMetadataReader.Extract(com.drew.metadata.Metadata)">
            <summary>Sets the stub of AbstractMetadataReader.Extract(Metadata metadata)</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubAbstractMetadataReader.ExtractMetadata">
            <summary>Sets the stub of AbstractMetadataReader.Extract(Metadata metadata)</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractMetadataReader.Get16Bits(System.Int32)">
            <summary>Sets the stub of AbstractMetadataReader.Get16Bits(Int32 anOffset)</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubAbstractMetadataReader.Get16BitsInt32">
            <summary>Sets the stub of AbstractMetadataReader.Get16Bits(Int32 anOffset)</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractMetadataReader.Get32Bits(System.Int32)">
            <summary>Sets the stub of AbstractMetadataReader.Get32Bits(Int32 anOffset)</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubAbstractMetadataReader.Get32BitsInt32">
            <summary>Sets the stub of AbstractMetadataReader.Get32Bits(Int32 anOffset)</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractMetadataReader.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractMetadataReader</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubAbstractMetadataReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubAbstractMetadataReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubAbstractMetadataReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.StubAbstractTagDescriptor">
            <summary>Stub type of com.drew.metadata.AbstractTagDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractTagDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractTagDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of AbstractTagDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubAbstractTagDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of AbstractTagDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubAbstractTagDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractTagDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubAbstractTagDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubAbstractTagDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubAbstractTagDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.StubIMetadataReader">
            <summary>Stub type of com.drew.metadata.IMetadataReader</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubIMetadataReader.#ctor">
            <summary>Initializes a new instance of type StubIMetadataReader</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubIMetadataReader.Extract">
            <summary>Sets the stub of IMetadataReader.Extract()</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubIMetadataReader.ExtractMetadata">
            <summary>Sets the stub of IMetadataReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubIMetadataReader.mde::com#drew#metadata#IMetadataReader#Extract">
            <summary>Sets the stub of IMetadataReader.Extract()</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubIMetadataReader.mde::com#drew#metadata#IMetadataReader#Extract(com.drew.metadata.Metadata)">
            <summary>Sets the stub of IMetadataReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.StubMetadataException">
            <summary>Stub type of com.drew.metadata.MetadataException</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubMetadataException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubMetadataException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubMetadataException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubMetadataException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMetadataException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubMetadataException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMetadataException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubMetadataException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubMetadataException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubMetadataException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubMetadataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubMetadataException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubMetadataException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubMetadataException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubMetadataException.InitializeStub">
            <summary>Initializes a new instance of type StubMetadataException</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubMetadataException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubMetadataException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubMetadataException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubMetadataException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubMetadataException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubMetadataException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubMetadataException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubMetadataException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubMetadataException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubMetadataException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubMetadataException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubMetadataException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubMetadataException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubMetadataException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:com.drew.metadata.Fakes.StubTag">
            <summary>Stub type of com.drew.metadata.Tag</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubTag.#ctor(System.Int32,com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubTag.InitializeStub">
            <summary>Initializes a new instance of type StubTag</summary>
        </member>
        <member name="M:com.drew.metadata.Fakes.StubTag.ToString">
            <summary>Sets the stub of Tag.ToString()</summary>
        </member>
        <member name="F:com.drew.metadata.Fakes.StubTag.ToString01">
            <summary>Sets the stub of Tag.ToString()</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubTag.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubTag.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.Fakes.StubTag.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimAbstractCasioTypeDirectory">
            <summary>Shim type of com.drew.metadata.exif.AbstractCasioTypeDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimAbstractCasioTypeDirectory.#ctor(com.drew.metadata.exif.AbstractCasioTypeDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimAbstractCasioTypeDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimAbstractCasioTypeDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimAbstractCasioTypeDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimAbstractCasioTypeDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimAbstractCasioTypeDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimAbstractCasioTypeDirectory.ConstructorString">
            <summary>Sets the shim of AbstractCasioTypeDirectory.AbstractCasioTypeDirectory(String aBundleName)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimAbstractCasioTypeDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimAbstractNikonTypeDirectory">
            <summary>Shim type of com.drew.metadata.exif.AbstractNikonTypeDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimAbstractNikonTypeDirectory.#ctor(com.drew.metadata.exif.AbstractNikonTypeDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimAbstractNikonTypeDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimAbstractNikonTypeDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimAbstractNikonTypeDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimAbstractNikonTypeDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimAbstractNikonTypeDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimAbstractNikonTypeDirectory.ConstructorString">
            <summary>Sets the shim of AbstractNikonTypeDirectory.AbstractNikonTypeDirectory(String aBundleName)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimAbstractNikonTypeDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCanonDescriptor">
            <summary>Shim type of com.drew.metadata.exif.CanonDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.#ctor(com.drew.metadata.exif.CanonDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of CanonDescriptor.CanonDescriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetAfPointSelectedDescription">
            <summary>Sets the shim of CanonDescriptor.GetAfPointSelectedDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetAfPointUsedDescription">
            <summary>Sets the shim of CanonDescriptor.GetAfPointUsedDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetAutoExposureBrackettingSequenceAndAutoCancellationDescription">
            <summary>Sets the shim of CanonDescriptor.GetAutoExposureBrackettingSequenceAndAutoCancellationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetAutoFocusAssistLightDescription">
            <summary>Sets the shim of CanonDescriptor.GetAutoFocusAssistLightDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetContinuousDriveModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetContinuousDriveModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetContrastDescription">
            <summary>Sets the shim of CanonDescriptor.GetContrastDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of CanonDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetDigitalZoomDescription">
            <summary>Sets the shim of CanonDescriptor.GetDigitalZoomDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetEasyShootingModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetEasyShootingModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetExposureModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetExposureModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetFillFlashReductionDescription">
            <summary>Sets the shim of CanonDescriptor.GetFillFlashReductionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetFlashActivityDescription">
            <summary>Sets the shim of CanonDescriptor.GetFlashActivityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetFlashBiasDescription">
            <summary>Sets the shim of CanonDescriptor.GetFlashBiasDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetFlashDetailsDescription">
            <summary>Sets the shim of CanonDescriptor.GetFlashDetailsDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetFlashModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetFlashModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetFocalUnitsPerMillimetreDescription">
            <summary>Sets the shim of CanonDescriptor.GetFocalUnitsPerMillimetreDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetFocusMode1Description">
            <summary>Sets the shim of CanonDescriptor.GetFocusMode1Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetFocusMode2Description">
            <summary>Sets the shim of CanonDescriptor.GetFocusMode2Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetFocusTypeDescription">
            <summary>Sets the shim of CanonDescriptor.GetFocusTypeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetImageSizeDescription">
            <summary>Sets the shim of CanonDescriptor.GetImageSizeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetIsoDescription">
            <summary>Sets the shim of CanonDescriptor.GetIsoDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetLensAutoFocusStopButtonDescription">
            <summary>Sets the shim of CanonDescriptor.GetLensAutoFocusStopButtonDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetLongExposureNoiseReductionDescription">
            <summary>Sets the shim of CanonDescriptor.GetLongExposureNoiseReductionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetLongFocalLengthDescription">
            <summary>Sets the shim of CanonDescriptor.GetLongFocalLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetMacroModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetMacroModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetMenuButtonReturnPositionDescription">
            <summary>Sets the shim of CanonDescriptor.GetMenuButtonReturnPositionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetMeteringModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetMeteringModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetMirrorLockupDescription">
            <summary>Sets the shim of CanonDescriptor.GetMirrorLockupDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetQualityDescription">
            <summary>Sets the shim of CanonDescriptor.GetQualityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetSaturationDescription">
            <summary>Sets the shim of CanonDescriptor.GetSaturationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetSelfTimerDelayDescription">
            <summary>Sets the shim of CanonDescriptor.GetSelfTimerDelayDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetSensorCleaningDescription">
            <summary>Sets the shim of CanonDescriptor.GetSensorCleaningDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetSetButtonFunctionWhenShootingDescription">
            <summary>Sets the shim of CanonDescriptor.GetSetButtonFunctionWhenShootingDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetSharpnessDescription">
            <summary>Sets the shim of CanonDescriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetShortFocalLengthDescription">
            <summary>Sets the shim of CanonDescriptor.GetShortFocalLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetShutterAutoExposureLockButtonDescription">
            <summary>Sets the shim of CanonDescriptor.GetShutterAutoExposureLockButtonDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetShutterCurtainSyncDescription">
            <summary>Sets the shim of CanonDescriptor.GetShutterCurtainSyncDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetShutterSpeedInAvModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetShutterSpeedInAvModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetTvAndAvExposureLevelDescription">
            <summary>Sets the shim of CanonDescriptor.GetTvAndAvExposureLevelDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.GetWhiteBalanceDescription">
            <summary>Sets the shim of CanonDescriptor.GetWhiteBalanceDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetAfPointSelectedDescription">
            <summary>Sets the shim of CanonDescriptor.GetAfPointSelectedDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetAfPointUsedDescription">
            <summary>Sets the shim of CanonDescriptor.GetAfPointUsedDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetAutoExposureBrackettingSequenceAndAutoCancellationDescription">
            <summary>Sets the shim of CanonDescriptor.GetAutoExposureBrackettingSequenceAndAutoCancellationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetAutoFocusAssistLightDescription">
            <summary>Sets the shim of CanonDescriptor.GetAutoFocusAssistLightDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetContinuousDriveModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetContinuousDriveModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetContrastDescription">
            <summary>Sets the shim of CanonDescriptor.GetContrastDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of CanonDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetDigitalZoomDescription">
            <summary>Sets the shim of CanonDescriptor.GetDigitalZoomDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetEasyShootingModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetEasyShootingModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetExposureModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetExposureModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetFillFlashReductionDescription">
            <summary>Sets the shim of CanonDescriptor.GetFillFlashReductionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetFlashActivityDescription">
            <summary>Sets the shim of CanonDescriptor.GetFlashActivityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetFlashBiasDescription">
            <summary>Sets the shim of CanonDescriptor.GetFlashBiasDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetFlashDetailsDescription">
            <summary>Sets the shim of CanonDescriptor.GetFlashDetailsDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetFlashModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetFlashModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetFocalUnitsPerMillimetreDescription">
            <summary>Sets the shim of CanonDescriptor.GetFocalUnitsPerMillimetreDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetFocusMode1Description">
            <summary>Sets the shim of CanonDescriptor.GetFocusMode1Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetFocusMode2Description">
            <summary>Sets the shim of CanonDescriptor.GetFocusMode2Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetFocusTypeDescription">
            <summary>Sets the shim of CanonDescriptor.GetFocusTypeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetImageSizeDescription">
            <summary>Sets the shim of CanonDescriptor.GetImageSizeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetIsoDescription">
            <summary>Sets the shim of CanonDescriptor.GetIsoDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetLensAutoFocusStopButtonDescription">
            <summary>Sets the shim of CanonDescriptor.GetLensAutoFocusStopButtonDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetLongExposureNoiseReductionDescription">
            <summary>Sets the shim of CanonDescriptor.GetLongExposureNoiseReductionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetLongFocalLengthDescription">
            <summary>Sets the shim of CanonDescriptor.GetLongFocalLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetMacroModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetMacroModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetMenuButtonReturnPositionDescription">
            <summary>Sets the shim of CanonDescriptor.GetMenuButtonReturnPositionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetMeteringModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetMeteringModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetMirrorLockupDescription">
            <summary>Sets the shim of CanonDescriptor.GetMirrorLockupDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetQualityDescription">
            <summary>Sets the shim of CanonDescriptor.GetQualityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetSaturationDescription">
            <summary>Sets the shim of CanonDescriptor.GetSaturationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetSelfTimerDelayDescription">
            <summary>Sets the shim of CanonDescriptor.GetSelfTimerDelayDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetSensorCleaningDescription">
            <summary>Sets the shim of CanonDescriptor.GetSensorCleaningDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetSetButtonFunctionWhenShootingDescription">
            <summary>Sets the shim of CanonDescriptor.GetSetButtonFunctionWhenShootingDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetSharpnessDescription">
            <summary>Sets the shim of CanonDescriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetShortFocalLengthDescription">
            <summary>Sets the shim of CanonDescriptor.GetShortFocalLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetShutterAutoExposureLockButtonDescription">
            <summary>Sets the shim of CanonDescriptor.GetShutterAutoExposureLockButtonDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetShutterCurtainSyncDescription">
            <summary>Sets the shim of CanonDescriptor.GetShutterCurtainSyncDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetShutterSpeedInAvModeDescription">
            <summary>Sets the shim of CanonDescriptor.GetShutterSpeedInAvModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetTvAndAvExposureLevelDescription">
            <summary>Sets the shim of CanonDescriptor.GetTvAndAvExposureLevelDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDescriptor.AllInstances.GetWhiteBalanceDescription">
            <summary>Sets the shim of CanonDescriptor.GetWhiteBalanceDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCanonDirectory">
            <summary>Shim type of com.drew.metadata.exif.CanonDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCanonDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCanonDirectory.#ctor(com.drew.metadata.exif.CanonDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCanonDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCanonDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCanonDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCanonDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDirectory.Constructor">
            <summary>Sets the shim of CanonDirectory.CanonDirectory()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the shim of CanonDirectory.SetIntArray(Int32 tagType, Int32[] ints)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCanonDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCanonDirectory.AllInstances.SetIntArrayInt32Int32Array">
            <summary>Sets the shim of CanonDirectory.SetIntArray(Int32 tagType, Int32[] ints)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor">
            <summary>Shim type of com.drew.metadata.exif.CasioType1Descriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.#ctor(com.drew.metadata.exif.CasioType1Descriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of CasioType1Descriptor.CasioType1Descriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetCcdSensitivityDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetCcdSensitivityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetContrastDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetContrastDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetDescriptionInt32">
            <summary>Sets the shim of CasioType1Descriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetDigitalZoomDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetDigitalZoomDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetFlashIntensityDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetFlashIntensityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetFlashModeDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetFlashModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetFocusingModeDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetFocusingModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetFocussingModeDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetFocussingModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetObjectDistanceDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetObjectDistanceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetQualityDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetQualityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetRecordingModeDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetRecordingModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetSaturationDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetSaturationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetSharpnessDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.GetWhiteBalanceDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetWhiteBalanceDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetCcdSensitivityDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetCcdSensitivityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetContrastDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetContrastDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of CasioType1Descriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetDigitalZoomDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetDigitalZoomDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetFlashIntensityDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetFlashIntensityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetFlashModeDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetFlashModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetFocusingModeDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetFocusingModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetFocussingModeDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetFocussingModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetObjectDistanceDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetObjectDistanceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetQualityDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetQualityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetRecordingModeDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetRecordingModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetSaturationDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetSaturationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetSharpnessDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Descriptor.AllInstances.GetWhiteBalanceDescription">
            <summary>Sets the shim of CasioType1Descriptor.GetWhiteBalanceDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCasioType1Directory">
            <summary>Shim type of com.drew.metadata.exif.CasioType1Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType1Directory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType1Directory.#ctor(com.drew.metadata.exif.CasioType1Directory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType1Directory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType1Directory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType1Directory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType1Directory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Directory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType1Directory.Constructor">
            <summary>Sets the shim of CasioType1Directory.CasioType1Directory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCasioType1Directory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor">
            <summary>Shim type of com.drew.metadata.exif.CasioType2Descriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.#ctor(com.drew.metadata.exif.CasioType2Descriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of CasioType2Descriptor.CasioType2Descriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetBestShotModeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetBestShotModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetCasioPreviewThumbnailDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetCasioPreviewThumbnailDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetCcdIsoSensitivityDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetCcdIsoSensitivityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetColorModeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetColorModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetContrastDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetContrastDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetDescriptionInt32">
            <summary>Sets the shim of CasioType2Descriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetEnhancementDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetEnhancementDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetFilterDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetFilterDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetFlashDistanceDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetFlashDistanceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetFocalLengthDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetFocalLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetFocusMode1Description">
            <summary>Sets the shim of CasioType2Descriptor.GetFocusMode1Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetFocusMode2Description">
            <summary>Sets the shim of CasioType2Descriptor.GetFocusMode2Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetImageSizeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetImageSizeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetIsoSensitivityDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetIsoSensitivityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetObjectDistanceDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetObjectDistanceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetPrintImageMatchingInfoDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetPrintImageMatchingInfoDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetQualityDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetQualityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetQualityModeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetQualityModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetRecordModeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetRecordModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetSaturationDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetSaturationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetSelfTimerDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetSelfTimerDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetSharpnessDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetThumbnailDimensionsDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetThumbnailDimensionsDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetThumbnailOffsetDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetThumbnailOffsetDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetThumbnailSizeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetThumbnailSizeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetTimeZoneDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetTimeZoneDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetWhiteBalance1Description">
            <summary>Sets the shim of CasioType2Descriptor.GetWhiteBalance1Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetWhiteBalance2Description">
            <summary>Sets the shim of CasioType2Descriptor.GetWhiteBalance2Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.GetWhiteBalanceBiasDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetWhiteBalanceBiasDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetBestShotModeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetBestShotModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetCasioPreviewThumbnailDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetCasioPreviewThumbnailDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetCcdIsoSensitivityDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetCcdIsoSensitivityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetColorModeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetColorModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetContrastDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetContrastDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of CasioType2Descriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetEnhancementDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetEnhancementDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetFilterDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetFilterDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetFlashDistanceDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetFlashDistanceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetFocalLengthDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetFocalLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetFocusMode1Description">
            <summary>Sets the shim of CasioType2Descriptor.GetFocusMode1Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetFocusMode2Description">
            <summary>Sets the shim of CasioType2Descriptor.GetFocusMode2Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetImageSizeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetImageSizeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetIsoSensitivityDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetIsoSensitivityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetObjectDistanceDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetObjectDistanceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetPrintImageMatchingInfoDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetPrintImageMatchingInfoDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetQualityDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetQualityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetQualityModeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetQualityModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetRecordModeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetRecordModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetSaturationDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetSaturationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetSelfTimerDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetSelfTimerDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetSharpnessDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetThumbnailDimensionsDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetThumbnailDimensionsDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetThumbnailOffsetDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetThumbnailOffsetDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetThumbnailSizeDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetThumbnailSizeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetTimeZoneDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetTimeZoneDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetWhiteBalance1Description">
            <summary>Sets the shim of CasioType2Descriptor.GetWhiteBalance1Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetWhiteBalance2Description">
            <summary>Sets the shim of CasioType2Descriptor.GetWhiteBalance2Description()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Descriptor.AllInstances.GetWhiteBalanceBiasDescription">
            <summary>Sets the shim of CasioType2Descriptor.GetWhiteBalanceBiasDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCasioType2Directory">
            <summary>Shim type of com.drew.metadata.exif.CasioType2Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType2Directory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType2Directory.#ctor(com.drew.metadata.exif.CasioType2Directory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType2Directory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType2Directory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType2Directory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimCasioType2Directory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Directory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimCasioType2Directory.Constructor">
            <summary>Sets the shim of CasioType2Directory.CasioType2Directory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimCasioType2Directory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifDescriptor">
            <summary>Shim type of com.drew.metadata.exif.ExifDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifDescriptor.#ctor(com.drew.metadata.exif.ExifDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of ExifDescriptor.ExifDescriptor(AbstractDirectory directory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.ConvertBytesToVersionStringInt32Array">
            <summary>Sets the shim of ExifDescriptor.ConvertBytesToVersionString(Int32[] someComponents)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.Get35mmFilmEquivFocalLengthDescription">
            <summary>Sets the shim of ExifDescriptor.Get35mmFilmEquivFocalLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetApertureValueDescription">
            <summary>Sets the shim of ExifDescriptor.GetApertureValueDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetBitsPerSampleDescription">
            <summary>Sets the shim of ExifDescriptor.GetBitsPerSampleDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetColorSpaceDescription">
            <summary>Sets the shim of ExifDescriptor.GetColorSpaceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetComponentConfigurationDescription">
            <summary>Sets the shim of ExifDescriptor.GetComponentConfigurationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetCompressionDescription">
            <summary>Sets the shim of ExifDescriptor.GetCompressionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetCompressionLevelDescription">
            <summary>Sets the shim of ExifDescriptor.GetCompressionLevelDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetContrastDescription">
            <summary>Sets the shim of ExifDescriptor.GetContrastDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetCustomRenderedDescription">
            <summary>Sets the shim of ExifDescriptor.GetCustomRenderedDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of ExifDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetDigitalZoomRatioDescription">
            <summary>Sets the shim of ExifDescriptor.GetDigitalZoomRatioDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetExifImageHeightDescription">
            <summary>Sets the shim of ExifDescriptor.GetExifImageHeightDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetExifImageWidthDescription">
            <summary>Sets the shim of ExifDescriptor.GetExifImageWidthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetExifVersionDescription">
            <summary>Sets the shim of ExifDescriptor.GetExifVersionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetExposureBiasDescription">
            <summary>Sets the shim of ExifDescriptor.GetExposureBiasDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetExposureModeDescription">
            <summary>Sets the shim of ExifDescriptor.GetExposureModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetExposureProgramDescription">
            <summary>Sets the shim of ExifDescriptor.GetExposureProgramDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetExposureTimeDescription">
            <summary>Sets the shim of ExifDescriptor.GetExposureTimeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetFNumberDescription">
            <summary>Sets the shim of ExifDescriptor.GetFNumberDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetFileSourceDescription">
            <summary>Sets the shim of ExifDescriptor.GetFileSourceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetFillOrderDescription">
            <summary>Sets the shim of ExifDescriptor.GetFillOrderDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetFlashDescription">
            <summary>Sets the shim of ExifDescriptor.GetFlashDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetFlashPixVersionDescription">
            <summary>Sets the shim of ExifDescriptor.GetFlashPixVersionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetFocalLengthDescription">
            <summary>Sets the shim of ExifDescriptor.GetFocalLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetFocalPlaneResolutionUnitDescription">
            <summary>Sets the shim of ExifDescriptor.GetFocalPlaneResolutionUnitDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetFocalPlaneXResolutionDescription">
            <summary>Sets the shim of ExifDescriptor.GetFocalPlaneXResolutionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetFocalPlaneYResolutionDescription">
            <summary>Sets the shim of ExifDescriptor.GetFocalPlaneYResolutionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetGainControlDescription">
            <summary>Sets the shim of ExifDescriptor.GetGainControlDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetIsoEquivalentDescription">
            <summary>Sets the shim of ExifDescriptor.GetIsoEquivalentDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetLightSourceDescription">
            <summary>Sets the shim of ExifDescriptor.GetLightSourceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetMaxApertureValueDescription">
            <summary>Sets the shim of ExifDescriptor.GetMaxApertureValueDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetMeteringModeDescription">
            <summary>Sets the shim of ExifDescriptor.GetMeteringModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetNewSubfileTypeDescription">
            <summary>Sets the shim of ExifDescriptor.GetNewSubfileTypeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetOrientationDescription">
            <summary>Sets the shim of ExifDescriptor.GetOrientationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetPhotometricInterpretationDescription">
            <summary>Sets the shim of ExifDescriptor.GetPhotometricInterpretationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetPlanarConfigurationDescription">
            <summary>Sets the shim of ExifDescriptor.GetPlanarConfigurationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetReferenceBlackWhiteDescription">
            <summary>Sets the shim of ExifDescriptor.GetReferenceBlackWhiteDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetResolutionDescription">
            <summary>Sets the shim of ExifDescriptor.GetResolutionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetRowsPerStripDescription">
            <summary>Sets the shim of ExifDescriptor.GetRowsPerStripDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetSamplesPerPixelDescription">
            <summary>Sets the shim of ExifDescriptor.GetSamplesPerPixelDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetSaturationDescription">
            <summary>Sets the shim of ExifDescriptor.GetSaturationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetSceneCaptureTypeDescription">
            <summary>Sets the shim of ExifDescriptor.GetSceneCaptureTypeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetSceneTypeDescription">
            <summary>Sets the shim of ExifDescriptor.GetSceneTypeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetSensingMethodDescription">
            <summary>Sets the shim of ExifDescriptor.GetSensingMethodDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetSharpnessDescription">
            <summary>Sets the shim of ExifDescriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetShutterSpeedDescription">
            <summary>Sets the shim of ExifDescriptor.GetShutterSpeedDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetStripByteCountsDescription">
            <summary>Sets the shim of ExifDescriptor.GetStripByteCountsDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetSubjectDistanceDescription">
            <summary>Sets the shim of ExifDescriptor.GetSubjectDistanceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetSubjectDistanceRangeDescription">
            <summary>Sets the shim of ExifDescriptor.GetSubjectDistanceRangeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetThresholdingDescription">
            <summary>Sets the shim of ExifDescriptor.GetThresholdingDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetThumbnailDescription">
            <summary>Sets the shim of ExifDescriptor.GetThumbnailDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetThumbnailImageHeightDescription">
            <summary>Sets the shim of ExifDescriptor.GetThumbnailImageHeightDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetThumbnailImageWidthDescription">
            <summary>Sets the shim of ExifDescriptor.GetThumbnailImageWidthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetThumbnailLengthDescription">
            <summary>Sets the shim of ExifDescriptor.GetThumbnailLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetThumbnailOffSetDescription">
            <summary>Sets the shim of ExifDescriptor.GetThumbnailOffSetDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetWhiteBalanceModeDescription">
            <summary>Sets the shim of ExifDescriptor.GetWhiteBalanceModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetXPAuthorDescription">
            <summary>Sets the shim of ExifDescriptor.GetXPAuthorDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetXPCommentsDescription">
            <summary>Sets the shim of ExifDescriptor.GetXPCommentsDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetXPKeywordsDescription">
            <summary>Sets the shim of ExifDescriptor.GetXPKeywordsDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetXPSubjectDescription">
            <summary>Sets the shim of ExifDescriptor.GetXPSubjectDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetXPTitleDescription">
            <summary>Sets the shim of ExifDescriptor.GetXPTitleDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetXResolutionDescription">
            <summary>Sets the shim of ExifDescriptor.GetXResolutionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetYCbCrPositioningDescription">
            <summary>Sets the shim of ExifDescriptor.GetYCbCrPositioningDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetYCbCrSubsamplingDescription">
            <summary>Sets the shim of ExifDescriptor.GetYCbCrSubsamplingDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.GetYResolutionDescription">
            <summary>Sets the shim of ExifDescriptor.GetYResolutionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.getSubfileTypeDescription">
            <summary>Sets the shim of ExifDescriptor.getSubfileTypeDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.Get35mmFilmEquivFocalLengthDescription">
            <summary>Sets the shim of ExifDescriptor.Get35mmFilmEquivFocalLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetApertureValueDescription">
            <summary>Sets the shim of ExifDescriptor.GetApertureValueDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetBitsPerSampleDescription">
            <summary>Sets the shim of ExifDescriptor.GetBitsPerSampleDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetColorSpaceDescription">
            <summary>Sets the shim of ExifDescriptor.GetColorSpaceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetComponentConfigurationDescription">
            <summary>Sets the shim of ExifDescriptor.GetComponentConfigurationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetCompressionDescription">
            <summary>Sets the shim of ExifDescriptor.GetCompressionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetCompressionLevelDescription">
            <summary>Sets the shim of ExifDescriptor.GetCompressionLevelDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetContrastDescription">
            <summary>Sets the shim of ExifDescriptor.GetContrastDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetCustomRenderedDescription">
            <summary>Sets the shim of ExifDescriptor.GetCustomRenderedDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of ExifDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetDigitalZoomRatioDescription">
            <summary>Sets the shim of ExifDescriptor.GetDigitalZoomRatioDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetExifImageHeightDescription">
            <summary>Sets the shim of ExifDescriptor.GetExifImageHeightDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetExifImageWidthDescription">
            <summary>Sets the shim of ExifDescriptor.GetExifImageWidthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetExifVersionDescription">
            <summary>Sets the shim of ExifDescriptor.GetExifVersionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetExposureBiasDescription">
            <summary>Sets the shim of ExifDescriptor.GetExposureBiasDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetExposureModeDescription">
            <summary>Sets the shim of ExifDescriptor.GetExposureModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetExposureProgramDescription">
            <summary>Sets the shim of ExifDescriptor.GetExposureProgramDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetExposureTimeDescription">
            <summary>Sets the shim of ExifDescriptor.GetExposureTimeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetFNumberDescription">
            <summary>Sets the shim of ExifDescriptor.GetFNumberDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetFileSourceDescription">
            <summary>Sets the shim of ExifDescriptor.GetFileSourceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetFillOrderDescription">
            <summary>Sets the shim of ExifDescriptor.GetFillOrderDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetFlashDescription">
            <summary>Sets the shim of ExifDescriptor.GetFlashDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetFlashPixVersionDescription">
            <summary>Sets the shim of ExifDescriptor.GetFlashPixVersionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetFocalLengthDescription">
            <summary>Sets the shim of ExifDescriptor.GetFocalLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetFocalPlaneResolutionUnitDescription">
            <summary>Sets the shim of ExifDescriptor.GetFocalPlaneResolutionUnitDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetFocalPlaneXResolutionDescription">
            <summary>Sets the shim of ExifDescriptor.GetFocalPlaneXResolutionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetFocalPlaneYResolutionDescription">
            <summary>Sets the shim of ExifDescriptor.GetFocalPlaneYResolutionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetGainControlDescription">
            <summary>Sets the shim of ExifDescriptor.GetGainControlDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetIsoEquivalentDescription">
            <summary>Sets the shim of ExifDescriptor.GetIsoEquivalentDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetLightSourceDescription">
            <summary>Sets the shim of ExifDescriptor.GetLightSourceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetMaxApertureValueDescription">
            <summary>Sets the shim of ExifDescriptor.GetMaxApertureValueDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetMeteringModeDescription">
            <summary>Sets the shim of ExifDescriptor.GetMeteringModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetNewSubfileTypeDescription">
            <summary>Sets the shim of ExifDescriptor.GetNewSubfileTypeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetOrientationDescription">
            <summary>Sets the shim of ExifDescriptor.GetOrientationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetPhotometricInterpretationDescription">
            <summary>Sets the shim of ExifDescriptor.GetPhotometricInterpretationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetPlanarConfigurationDescription">
            <summary>Sets the shim of ExifDescriptor.GetPlanarConfigurationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetReferenceBlackWhiteDescription">
            <summary>Sets the shim of ExifDescriptor.GetReferenceBlackWhiteDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetResolutionDescription">
            <summary>Sets the shim of ExifDescriptor.GetResolutionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetRowsPerStripDescription">
            <summary>Sets the shim of ExifDescriptor.GetRowsPerStripDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetSamplesPerPixelDescription">
            <summary>Sets the shim of ExifDescriptor.GetSamplesPerPixelDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetSaturationDescription">
            <summary>Sets the shim of ExifDescriptor.GetSaturationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetSceneCaptureTypeDescription">
            <summary>Sets the shim of ExifDescriptor.GetSceneCaptureTypeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetSceneTypeDescription">
            <summary>Sets the shim of ExifDescriptor.GetSceneTypeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetSensingMethodDescription">
            <summary>Sets the shim of ExifDescriptor.GetSensingMethodDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetSharpnessDescription">
            <summary>Sets the shim of ExifDescriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetShutterSpeedDescription">
            <summary>Sets the shim of ExifDescriptor.GetShutterSpeedDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetStripByteCountsDescription">
            <summary>Sets the shim of ExifDescriptor.GetStripByteCountsDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetSubjectDistanceDescription">
            <summary>Sets the shim of ExifDescriptor.GetSubjectDistanceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetSubjectDistanceRangeDescription">
            <summary>Sets the shim of ExifDescriptor.GetSubjectDistanceRangeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetThresholdingDescription">
            <summary>Sets the shim of ExifDescriptor.GetThresholdingDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetThumbnailDescription">
            <summary>Sets the shim of ExifDescriptor.GetThumbnailDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetThumbnailImageHeightDescription">
            <summary>Sets the shim of ExifDescriptor.GetThumbnailImageHeightDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetThumbnailImageWidthDescription">
            <summary>Sets the shim of ExifDescriptor.GetThumbnailImageWidthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetThumbnailLengthDescription">
            <summary>Sets the shim of ExifDescriptor.GetThumbnailLengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetThumbnailOffSetDescription">
            <summary>Sets the shim of ExifDescriptor.GetThumbnailOffSetDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetWhiteBalanceModeDescription">
            <summary>Sets the shim of ExifDescriptor.GetWhiteBalanceModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetXPAuthorDescription">
            <summary>Sets the shim of ExifDescriptor.GetXPAuthorDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetXPCommentsDescription">
            <summary>Sets the shim of ExifDescriptor.GetXPCommentsDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetXPKeywordsDescription">
            <summary>Sets the shim of ExifDescriptor.GetXPKeywordsDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetXPSubjectDescription">
            <summary>Sets the shim of ExifDescriptor.GetXPSubjectDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetXPTitleDescription">
            <summary>Sets the shim of ExifDescriptor.GetXPTitleDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetXResolutionDescription">
            <summary>Sets the shim of ExifDescriptor.GetXResolutionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetYCbCrPositioningDescription">
            <summary>Sets the shim of ExifDescriptor.GetYCbCrPositioningDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetYCbCrSubsamplingDescription">
            <summary>Sets the shim of ExifDescriptor.GetYCbCrSubsamplingDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.GetYResolutionDescription">
            <summary>Sets the shim of ExifDescriptor.GetYResolutionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDescriptor.AllInstances.getSubfileTypeDescription">
            <summary>Sets the shim of ExifDescriptor.getSubfileTypeDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifDirectory">
            <summary>Shim type of com.drew.metadata.exif.ExifDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifDirectory.#ctor(com.drew.metadata.exif.ExifDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDirectory.Constructor">
            <summary>Sets the shim of ExifDirectory.ExifDirectory()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDirectory.ContainsThumbnail">
            <summary>Sets the shim of ExifDirectory.ContainsThumbnail()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDirectory.GetThumbnailData">
            <summary>Sets the shim of ExifDirectory.GetThumbnailData()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDirectory.WriteThumbnailString">
            <summary>Sets the shim of ExifDirectory.WriteThumbnail(String filename)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDirectory.AllInstances.ContainsThumbnail">
            <summary>Sets the shim of ExifDirectory.ContainsThumbnail()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDirectory.AllInstances.GetThumbnailData">
            <summary>Sets the shim of ExifDirectory.GetThumbnailData()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifDirectory.AllInstances.WriteThumbnailString">
            <summary>Sets the shim of ExifDirectory.WriteThumbnail(String filename)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor">
            <summary>Shim type of com.drew.metadata.exif.ExifInteropDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.#ctor(com.drew.metadata.exif.ExifInteropDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of ExifInteropDescriptor.ExifInteropDescriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of ExifInteropDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.GetInteropIndexDescription">
            <summary>Sets the shim of ExifInteropDescriptor.GetInteropIndexDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.GetInteropVersionDescription">
            <summary>Sets the shim of ExifInteropDescriptor.GetInteropVersionDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of ExifInteropDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.AllInstances.GetInteropIndexDescription">
            <summary>Sets the shim of ExifInteropDescriptor.GetInteropIndexDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifInteropDescriptor.AllInstances.GetInteropVersionDescription">
            <summary>Sets the shim of ExifInteropDescriptor.GetInteropVersionDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifInteropDirectory">
            <summary>Shim type of com.drew.metadata.exif.ExifInteropDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifInteropDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifInteropDirectory.#ctor(com.drew.metadata.exif.ExifInteropDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifInteropDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifInteropDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifInteropDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifInteropDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifInteropDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifInteropDirectory.Constructor">
            <summary>Sets the shim of ExifInteropDirectory.ExifInteropDirectory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifInteropDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifProcessingException">
            <summary>Shim type of com.drew.metadata.exif.ExifProcessingException</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifProcessingException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifProcessingException.#ctor(com.drew.metadata.exif.ExifProcessingException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifProcessingException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifProcessingException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifProcessingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifProcessingException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifProcessingException.ConstructorException">
            <summary>Sets the shim of ExifProcessingException.ExifProcessingException(Exception cause)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifProcessingException.ConstructorString">
            <summary>Sets the shim of ExifProcessingException.ExifProcessingException(String message)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifProcessingException.ConstructorStringException">
            <summary>Sets the shim of ExifProcessingException.ExifProcessingException(String message, Exception cause)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifProcessingException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifReader">
            <summary>Shim type of com.drew.metadata.exif.ExifReader</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifReader.#ctor(com.drew.metadata.exif.ExifReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimExifReader.Bind(com.drew.metadata.IMetadataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.CalculateDirectoryEntryOffSetInt32Int32">
            <summary>Sets the shim of ExifReader.CalculateDirectoryEntryOffSet(Int32 ifdStartOffSet, Int32 entryNumber)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.CalculateTagOffsetInt32Int32">
            <summary>Sets the shim of ExifReader.CalculateTagOffset(Int32 dirStartOffset, Int32 entryNumber)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.CalculateTagValueOffsetInt32Int32Int32">
            <summary>Sets the shim of ExifReader.CalculateTagValueOffset(Int32 byteCount, Int32 dirEntryOffset, Int32 tiffHeaderOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.ConstructorByteArray">
            <summary>Sets the shim of ExifReader.ExifReader(Byte[] aData)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.ConstructorFileInfo">
            <summary>Sets the shim of ExifReader.ExifReader(FileInfo aFile)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.ExifDirectoryGet">
            <summary>Sets the shim of ExifReader.get_ExifDirectory()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.ExtractIFDMetadataInt32">
            <summary>Sets the shim of ExifReader.ExtractIFD(Metadata aMetadata, Int32 aTiffHeaderOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.ExtractMetadata">
            <summary>Sets the shim of ExifReader.Extract(Metadata metadata)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.ExtractTiffMetadata">
            <summary>Sets the shim of ExifReader.ExtractTiff(Metadata aMetadata)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.Get16BitsInt32">
            <summary>Sets the shim of ExifReader.Get16Bits(Int32 offSet)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.Get32BitsInt32">
            <summary>Sets the shim of ExifReader.Get32Bits(Int32 offSet)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.IsDirectoryLengthValidInt32Int32">
            <summary>Sets the shim of ExifReader.IsDirectoryLengthValid(Int32 dirStartOffset, Int32 tiffHeaderOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.ProcessDirectoryAbstractDirectoryIDictionaryOfInt32StringInt32Int32">
            <summary>Sets the shim of ExifReader.ProcessDirectory(AbstractDirectory directory, IDictionary`2&lt;Int32,String&gt; processedDirectoryOffsets, Int32 dirStartOffset, Int32 tiffHeaderOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.ProcessMakerNoteInt32IDictionaryOfInt32StringInt32">
            <summary>Sets the shim of ExifReader.ProcessMakerNote(Int32 subdirOffset, IDictionary`2&lt;Int32,String&gt; processedDirectoryOffsets, Int32 tiffHeaderOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.ProcessTagAbstractDirectoryInt32Int32Int32Int32">
            <summary>Sets the shim of ExifReader.ProcessTag(AbstractDirectory directory, Int32 tagType, Int32 tagValueOffset, Int32 componentCount, Int32 formatCode)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.ReadCommentStringInt32Int32Int32">
            <summary>Sets the shim of ExifReader.ReadCommentString(Int32 tagValueOffSet, Int32 componentCount, Int32 formatCode)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.ReadStringInt32Int32">
            <summary>Sets the shim of ExifReader.ReadString(Int32 offSet, Int32 maxLength)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.SetByteOrderString">
            <summary>Sets the shim of ExifReader.SetByteOrder(String byteOrderIdentifier)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.StaticConstructor">
            <summary>Sets the shim of ExifReader.ExifReader()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.StoreThumbnailBytesAbstractDirectoryInt32">
            <summary>Sets the shim of ExifReader.StoreThumbnailBytes(AbstractDirectory exifDirectory, Int32 tiffHeaderOffset)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.CalculateDirectoryEntryOffSetInt32Int32">
            <summary>Sets the shim of ExifReader.CalculateDirectoryEntryOffSet(Int32 ifdStartOffSet, Int32 entryNumber)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.CalculateTagOffsetInt32Int32">
            <summary>Sets the shim of ExifReader.CalculateTagOffset(Int32 dirStartOffset, Int32 entryNumber)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.CalculateTagValueOffsetInt32Int32Int32">
            <summary>Sets the shim of ExifReader.CalculateTagValueOffset(Int32 byteCount, Int32 dirEntryOffset, Int32 tiffHeaderOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.ExifDirectoryGet">
            <summary>Sets the shim of ExifReader.get_ExifDirectory()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.ExtractIFDMetadataInt32">
            <summary>Sets the shim of ExifReader.ExtractIFD(Metadata aMetadata, Int32 aTiffHeaderOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.ExtractMetadata">
            <summary>Sets the shim of ExifReader.Extract(Metadata metadata)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.ExtractTiffMetadata">
            <summary>Sets the shim of ExifReader.ExtractTiff(Metadata aMetadata)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.Get16BitsInt32">
            <summary>Sets the shim of ExifReader.Get16Bits(Int32 offSet)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.Get32BitsInt32">
            <summary>Sets the shim of ExifReader.Get32Bits(Int32 offSet)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.IsDirectoryLengthValidInt32Int32">
            <summary>Sets the shim of ExifReader.IsDirectoryLengthValid(Int32 dirStartOffset, Int32 tiffHeaderOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.ProcessDirectoryAbstractDirectoryIDictionaryOfInt32StringInt32Int32">
            <summary>Sets the shim of ExifReader.ProcessDirectory(AbstractDirectory directory, IDictionary`2&lt;Int32,String&gt; processedDirectoryOffsets, Int32 dirStartOffset, Int32 tiffHeaderOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.ProcessMakerNoteInt32IDictionaryOfInt32StringInt32">
            <summary>Sets the shim of ExifReader.ProcessMakerNote(Int32 subdirOffset, IDictionary`2&lt;Int32,String&gt; processedDirectoryOffsets, Int32 tiffHeaderOffset)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.ProcessTagAbstractDirectoryInt32Int32Int32Int32">
            <summary>Sets the shim of ExifReader.ProcessTag(AbstractDirectory directory, Int32 tagType, Int32 tagValueOffset, Int32 componentCount, Int32 formatCode)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.ReadCommentStringInt32Int32Int32">
            <summary>Sets the shim of ExifReader.ReadCommentString(Int32 tagValueOffSet, Int32 componentCount, Int32 formatCode)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.ReadStringInt32Int32">
            <summary>Sets the shim of ExifReader.ReadString(Int32 offSet, Int32 maxLength)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.SetByteOrderString">
            <summary>Sets the shim of ExifReader.SetByteOrder(String byteOrderIdentifier)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimExifReader.AllInstances.StoreThumbnailBytesAbstractDirectoryInt32">
            <summary>Sets the shim of ExifReader.StoreThumbnailBytes(AbstractDirectory exifDirectory, Int32 tiffHeaderOffset)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor">
            <summary>Shim type of com.drew.metadata.exif.FujifilmDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.#ctor(com.drew.metadata.exif.FujifilmDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of FujifilmDescriptor.FujifilmDescriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetAutoExposureWarningDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetAutoExposureWarningDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetBlurWarningDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetBlurWarningDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetColorDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetColorDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetContinuousTakingOrAutoBrackettingDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetContinuousTakingOrAutoBrackettingDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of FujifilmDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetFlashModeDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetFlashModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetFlashStrengthDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetFlashStrengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetFocusModeDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetFocusModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetFocusWarningDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetFocusWarningDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetMacroDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetMacroDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetPictureModeDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetPictureModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetSharpnessDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetSlowSyncDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetSlowSyncDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetToneDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetToneDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.GetWhiteBalanceDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetWhiteBalanceDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetAutoExposureWarningDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetAutoExposureWarningDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetBlurWarningDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetBlurWarningDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetColorDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetColorDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetContinuousTakingOrAutoBrackettingDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetContinuousTakingOrAutoBrackettingDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of FujifilmDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetFlashModeDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetFlashModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetFlashStrengthDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetFlashStrengthDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetFocusModeDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetFocusModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetFocusWarningDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetFocusWarningDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetMacroDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetMacroDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetPictureModeDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetPictureModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetSharpnessDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetSlowSyncDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetSlowSyncDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetToneDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetToneDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDescriptor.AllInstances.GetWhiteBalanceDescription">
            <summary>Sets the shim of FujifilmDescriptor.GetWhiteBalanceDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimFujifilmDirectory">
            <summary>Shim type of com.drew.metadata.exif.FujifilmDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimFujifilmDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimFujifilmDirectory.#ctor(com.drew.metadata.exif.FujifilmDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimFujifilmDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimFujifilmDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimFujifilmDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimFujifilmDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimFujifilmDirectory.Constructor">
            <summary>Sets the shim of FujifilmDirectory.FujifilmDirectory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimFujifilmDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimGpsDescriptor">
            <summary>Shim type of com.drew.metadata.exif.GpsDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.#ctor(com.drew.metadata.exif.GpsDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of GpsDescriptor.GpsDescriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of GpsDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetGpsAltitudeDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsAltitudeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetGpsAltitudeRefDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsAltitudeRefDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetGpsDestinationReferenceDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsDestinationReferenceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetGpsDirectionDescriptionInt32">
            <summary>Sets the shim of GpsDescriptor.GetGpsDirectionDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetGpsDirectionReferenceDescriptionInt32">
            <summary>Sets the shim of GpsDescriptor.GetGpsDirectionReferenceDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetGpsLatitudeDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsLatitudeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetGpsLongitudeDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsLongitudeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetGpsMeasureModeDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsMeasureModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetGpsSpeedRefDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsSpeedRefDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetGpsStatusDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsStatusDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetGpsTimeStampDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsTimeStampDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.GetHoursMinutesSecondsDescriptionInt32">
            <summary>Sets the shim of GpsDescriptor.GetHoursMinutesSecondsDescription(Int32 tagType)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of GpsDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetGpsAltitudeDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsAltitudeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetGpsAltitudeRefDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsAltitudeRefDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetGpsDestinationReferenceDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsDestinationReferenceDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetGpsDirectionDescriptionInt32">
            <summary>Sets the shim of GpsDescriptor.GetGpsDirectionDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetGpsDirectionReferenceDescriptionInt32">
            <summary>Sets the shim of GpsDescriptor.GetGpsDirectionReferenceDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetGpsLatitudeDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsLatitudeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetGpsLongitudeDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsLongitudeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetGpsMeasureModeDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsMeasureModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetGpsSpeedRefDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsSpeedRefDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetGpsStatusDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsStatusDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetGpsTimeStampDescription">
            <summary>Sets the shim of GpsDescriptor.GetGpsTimeStampDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDescriptor.AllInstances.GetHoursMinutesSecondsDescriptionInt32">
            <summary>Sets the shim of GpsDescriptor.GetHoursMinutesSecondsDescription(Int32 tagType)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimGpsDirectory">
            <summary>Shim type of com.drew.metadata.exif.GpsDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimGpsDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimGpsDirectory.#ctor(com.drew.metadata.exif.GpsDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimGpsDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimGpsDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimGpsDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimGpsDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimGpsDirectory.Constructor">
            <summary>Sets the shim of GpsDirectory.GpsDirectory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimGpsDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimKodakDescriptor">
            <summary>Shim type of com.drew.metadata.exif.KodakDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKodakDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKodakDescriptor.#ctor(com.drew.metadata.exif.KodakDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKodakDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKodakDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKodakDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKodakDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of KodakDescriptor.KodakDescriptor(AbstractDirectory directory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKodakDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of KodakDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimKodakDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKodakDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of KodakDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimKodakDirectory">
            <summary>Shim type of com.drew.metadata.exif.KodakDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKodakDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKodakDirectory.#ctor(com.drew.metadata.exif.KodakDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKodakDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKodakDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKodakDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKodakDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKodakDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKodakDirectory.Constructor">
            <summary>Sets the shim of KodakDirectory.KodakDirectory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimKodakDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor">
            <summary>Shim type of com.drew.metadata.exif.KyoceraDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.#ctor(com.drew.metadata.exif.KyoceraDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of KyoceraDescriptor.KyoceraDescriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of KyoceraDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.GetPrintImageMatchingInfoDescription">
            <summary>Sets the shim of KyoceraDescriptor.GetPrintImageMatchingInfoDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.GetProprietaryThumbnailDataDescription">
            <summary>Sets the shim of KyoceraDescriptor.GetProprietaryThumbnailDataDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of KyoceraDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.AllInstances.GetPrintImageMatchingInfoDescription">
            <summary>Sets the shim of KyoceraDescriptor.GetPrintImageMatchingInfoDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKyoceraDescriptor.AllInstances.GetProprietaryThumbnailDataDescription">
            <summary>Sets the shim of KyoceraDescriptor.GetProprietaryThumbnailDataDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimKyoceraDirectory">
            <summary>Shim type of com.drew.metadata.exif.KyoceraDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKyoceraDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKyoceraDirectory.#ctor(com.drew.metadata.exif.KyoceraDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKyoceraDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKyoceraDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKyoceraDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimKyoceraDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKyoceraDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimKyoceraDirectory.Constructor">
            <summary>Sets the shim of KyoceraDirectory.KyoceraDirectory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimKyoceraDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor">
            <summary>Shim type of com.drew.metadata.exif.NikonType1Descriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.#ctor(com.drew.metadata.exif.NikonType1Descriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of NikonType1Descriptor.NikonType1Descriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.GetCcdSensitivityDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetCcdSensitivityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.GetColorModeDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetColorModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.GetConverterDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetConverterDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.GetDescriptionInt32">
            <summary>Sets the shim of NikonType1Descriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.GetDigitalZoomDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetDigitalZoomDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.GetFocusDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetFocusDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.GetImageAdjustmentDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetImageAdjustmentDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.GetQualityDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetQualityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.GetWhiteBalanceDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetWhiteBalanceDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.AllInstances.GetCcdSensitivityDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetCcdSensitivityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.AllInstances.GetColorModeDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetColorModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.AllInstances.GetConverterDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetConverterDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of NikonType1Descriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.AllInstances.GetDigitalZoomDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetDigitalZoomDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.AllInstances.GetFocusDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetFocusDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.AllInstances.GetImageAdjustmentDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetImageAdjustmentDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.AllInstances.GetQualityDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetQualityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Descriptor.AllInstances.GetWhiteBalanceDescription">
            <summary>Sets the shim of NikonType1Descriptor.GetWhiteBalanceDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimNikonType1Directory">
            <summary>Shim type of com.drew.metadata.exif.NikonType1Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType1Directory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType1Directory.#ctor(com.drew.metadata.exif.NikonType1Directory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType1Directory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType1Directory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType1Directory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType1Directory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Directory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType1Directory.Constructor">
            <summary>Sets the shim of NikonType1Directory.NikonType1Directory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimNikonType1Directory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor">
            <summary>Shim type of com.drew.metadata.exif.NikonType2Descriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.#ctor(com.drew.metadata.exif.NikonType2Descriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of NikonType2Descriptor.NikonType2Descriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.GetAutoFirmwareVersionDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetAutoFirmwareVersionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.GetAutoFlashCompensation">
            <summary>Sets the shim of NikonType2Descriptor.GetAutoFlashCompensation()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.GetAutoFlashCompensationDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetAutoFlashCompensationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.GetAutoFocusPositionDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetAutoFocusPositionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.GetColorModeDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetColorModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.GetDescriptionInt32">
            <summary>Sets the shim of NikonType2Descriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.GetDigitalZoomDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetDigitalZoomDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.GetHueAdjustmentDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetHueAdjustmentDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.GetIsoSettingDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetIsoSettingDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.GetLensDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetLensDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.AllInstances.GetAutoFirmwareVersionDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetAutoFirmwareVersionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.AllInstances.GetAutoFlashCompensation">
            <summary>Sets the shim of NikonType2Descriptor.GetAutoFlashCompensation()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.AllInstances.GetAutoFlashCompensationDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetAutoFlashCompensationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.AllInstances.GetAutoFocusPositionDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetAutoFocusPositionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.AllInstances.GetColorModeDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetColorModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of NikonType2Descriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.AllInstances.GetDigitalZoomDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetDigitalZoomDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.AllInstances.GetHueAdjustmentDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetHueAdjustmentDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.AllInstances.GetIsoSettingDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetIsoSettingDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Descriptor.AllInstances.GetLensDescription">
            <summary>Sets the shim of NikonType2Descriptor.GetLensDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimNikonType2Directory">
            <summary>Shim type of com.drew.metadata.exif.NikonType2Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType2Directory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType2Directory.#ctor(com.drew.metadata.exif.NikonType2Directory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType2Directory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType2Directory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType2Directory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimNikonType2Directory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Directory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimNikonType2Directory.Constructor">
            <summary>Sets the shim of NikonType2Directory.NikonType2Directory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimNikonType2Directory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor">
            <summary>Shim type of com.drew.metadata.exif.OlympusDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.#ctor(com.drew.metadata.exif.OlympusDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of OlympusDescriptor.OlympusDescriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of OlympusDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.GetDigiZoomRatioDescription">
            <summary>Sets the shim of OlympusDescriptor.GetDigiZoomRatioDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.GetJpegQualityDescription">
            <summary>Sets the shim of OlympusDescriptor.GetJpegQualityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.GetMacroModeDescription">
            <summary>Sets the shim of OlympusDescriptor.GetMacroModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.GetSpecialModeDescription">
            <summary>Sets the shim of OlympusDescriptor.GetSpecialModeDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of OlympusDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.AllInstances.GetDigiZoomRatioDescription">
            <summary>Sets the shim of OlympusDescriptor.GetDigiZoomRatioDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.AllInstances.GetJpegQualityDescription">
            <summary>Sets the shim of OlympusDescriptor.GetJpegQualityDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.AllInstances.GetMacroModeDescription">
            <summary>Sets the shim of OlympusDescriptor.GetMacroModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDescriptor.AllInstances.GetSpecialModeDescription">
            <summary>Sets the shim of OlympusDescriptor.GetSpecialModeDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimOlympusDirectory">
            <summary>Shim type of com.drew.metadata.exif.OlympusDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimOlympusDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimOlympusDirectory.#ctor(com.drew.metadata.exif.OlympusDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimOlympusDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimOlympusDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimOlympusDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimOlympusDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimOlympusDirectory.Constructor">
            <summary>Sets the shim of OlympusDirectory.OlympusDirectory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimOlympusDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor">
            <summary>Shim type of com.drew.metadata.exif.PanasonicDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.#ctor(com.drew.metadata.exif.PanasonicDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of PanasonicDescriptor.PanasonicDescriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of PanasonicDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.GetMacroModeDescription">
            <summary>Sets the shim of PanasonicDescriptor.GetMacroModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.GetPrintImageMatchingInfoDescription">
            <summary>Sets the shim of PanasonicDescriptor.GetPrintImageMatchingInfoDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.GetRecordModeDescription">
            <summary>Sets the shim of PanasonicDescriptor.GetRecordModeDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of PanasonicDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.AllInstances.GetMacroModeDescription">
            <summary>Sets the shim of PanasonicDescriptor.GetMacroModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.AllInstances.GetPrintImageMatchingInfoDescription">
            <summary>Sets the shim of PanasonicDescriptor.GetPrintImageMatchingInfoDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDescriptor.AllInstances.GetRecordModeDescription">
            <summary>Sets the shim of PanasonicDescriptor.GetRecordModeDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimPanasonicDirectory">
            <summary>Shim type of com.drew.metadata.exif.PanasonicDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPanasonicDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPanasonicDirectory.#ctor(com.drew.metadata.exif.PanasonicDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPanasonicDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPanasonicDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPanasonicDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPanasonicDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPanasonicDirectory.Constructor">
            <summary>Sets the shim of PanasonicDirectory.PanasonicDirectory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimPanasonicDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor">
            <summary>Shim type of com.drew.metadata.exif.PentaxDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.#ctor(com.drew.metadata.exif.PentaxDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of PentaxDescriptor.PentaxDescriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetCaptureModeDescription">
            <summary>Sets the shim of PentaxDescriptor.GetCaptureModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetColorDescription">
            <summary>Sets the shim of PentaxDescriptor.GetColorDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetContrastDescription">
            <summary>Sets the shim of PentaxDescriptor.GetContrastDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of PentaxDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetDigitalZoomDescription">
            <summary>Sets the shim of PentaxDescriptor.GetDigitalZoomDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetFlashModeDescription">
            <summary>Sets the shim of PentaxDescriptor.GetFlashModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetFocusModeDescription">
            <summary>Sets the shim of PentaxDescriptor.GetFocusModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetIsoSpeedDescription">
            <summary>Sets the shim of PentaxDescriptor.GetIsoSpeedDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetPrintImageMatchingInfoDescription">
            <summary>Sets the shim of PentaxDescriptor.GetPrintImageMatchingInfoDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetQualityLevelDescription">
            <summary>Sets the shim of PentaxDescriptor.GetQualityLevelDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetSaturationDescription">
            <summary>Sets the shim of PentaxDescriptor.GetSaturationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetSharpnessDescription">
            <summary>Sets the shim of PentaxDescriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.GetWhiteBalanceDescription">
            <summary>Sets the shim of PentaxDescriptor.GetWhiteBalanceDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetCaptureModeDescription">
            <summary>Sets the shim of PentaxDescriptor.GetCaptureModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetColorDescription">
            <summary>Sets the shim of PentaxDescriptor.GetColorDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetContrastDescription">
            <summary>Sets the shim of PentaxDescriptor.GetContrastDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of PentaxDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetDigitalZoomDescription">
            <summary>Sets the shim of PentaxDescriptor.GetDigitalZoomDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetFlashModeDescription">
            <summary>Sets the shim of PentaxDescriptor.GetFlashModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetFocusModeDescription">
            <summary>Sets the shim of PentaxDescriptor.GetFocusModeDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetIsoSpeedDescription">
            <summary>Sets the shim of PentaxDescriptor.GetIsoSpeedDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetPrintImageMatchingInfoDescription">
            <summary>Sets the shim of PentaxDescriptor.GetPrintImageMatchingInfoDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetQualityLevelDescription">
            <summary>Sets the shim of PentaxDescriptor.GetQualityLevelDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetSaturationDescription">
            <summary>Sets the shim of PentaxDescriptor.GetSaturationDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetSharpnessDescription">
            <summary>Sets the shim of PentaxDescriptor.GetSharpnessDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDescriptor.AllInstances.GetWhiteBalanceDescription">
            <summary>Sets the shim of PentaxDescriptor.GetWhiteBalanceDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimPentaxDirectory">
            <summary>Shim type of com.drew.metadata.exif.PentaxDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPentaxDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPentaxDirectory.#ctor(com.drew.metadata.exif.PentaxDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPentaxDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPentaxDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPentaxDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimPentaxDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimPentaxDirectory.Constructor">
            <summary>Sets the shim of PentaxDirectory.PentaxDirectory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimPentaxDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimSonyDescriptor">
            <summary>Shim type of com.drew.metadata.exif.SonyDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimSonyDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimSonyDescriptor.#ctor(com.drew.metadata.exif.SonyDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimSonyDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimSonyDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimSonyDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimSonyDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of SonyDescriptor.SonyDescriptor(AbstractDirectory directory)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimSonyDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of SonyDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimSonyDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimSonyDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of SonyDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimSonyDirectory">
            <summary>Shim type of com.drew.metadata.exif.SonyDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimSonyDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimSonyDirectory.#ctor(com.drew.metadata.exif.SonyDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimSonyDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimSonyDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimSonyDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.ShimSonyDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimSonyDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.ShimSonyDirectory.Constructor">
            <summary>Sets the shim of SonyDirectory.SonyDirectory()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.ShimSonyDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubAbstractCasioTypeDirectory">
            <summary>Stub type of com.drew.metadata.exif.AbstractCasioTypeDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubAbstractCasioTypeDirectory.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubAbstractCasioTypeDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractCasioTypeDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubAbstractCasioTypeDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubAbstractCasioTypeDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubAbstractCasioTypeDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubAbstractCasioTypeDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubAbstractCasioTypeDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubAbstractNikonTypeDirectory">
            <summary>Stub type of com.drew.metadata.exif.AbstractNikonTypeDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubAbstractNikonTypeDirectory.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubAbstractNikonTypeDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractNikonTypeDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubAbstractNikonTypeDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubAbstractNikonTypeDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubAbstractNikonTypeDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubAbstractNikonTypeDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubAbstractNikonTypeDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubCanonDescriptor">
            <summary>Stub type of com.drew.metadata.exif.CanonDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCanonDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCanonDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of CanonDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubCanonDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of CanonDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCanonDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubCanonDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCanonDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCanonDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCanonDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubCanonDirectory">
            <summary>Stub type of com.drew.metadata.exif.CanonDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCanonDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCanonDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubCanonDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCanonDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of CanonDirectory.SetIntArray(Int32 tagType, Int32[] ints)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubCanonDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of CanonDirectory.SetIntArray(Int32 tagType, Int32[] ints)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCanonDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCanonDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCanonDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubCasioType1Descriptor">
            <summary>Stub type of com.drew.metadata.exif.CasioType1Descriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType1Descriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType1Descriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of CasioType1Descriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubCasioType1Descriptor.GetDescriptionInt32">
            <summary>Sets the stub of CasioType1Descriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType1Descriptor.InitializeStub">
            <summary>Initializes a new instance of type StubCasioType1Descriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType1Descriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType1Descriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType1Descriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubCasioType1Directory">
            <summary>Stub type of com.drew.metadata.exif.CasioType1Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType1Directory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType1Directory.InitializeStub">
            <summary>Initializes a new instance of type StubCasioType1Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType1Directory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubCasioType1Directory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType1Directory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType1Directory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType1Directory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubCasioType2Descriptor">
            <summary>Stub type of com.drew.metadata.exif.CasioType2Descriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType2Descriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType2Descriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of CasioType2Descriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubCasioType2Descriptor.GetDescriptionInt32">
            <summary>Sets the stub of CasioType2Descriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType2Descriptor.InitializeStub">
            <summary>Initializes a new instance of type StubCasioType2Descriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType2Descriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType2Descriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType2Descriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubCasioType2Directory">
            <summary>Stub type of com.drew.metadata.exif.CasioType2Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType2Directory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType2Directory.InitializeStub">
            <summary>Initializes a new instance of type StubCasioType2Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubCasioType2Directory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubCasioType2Directory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType2Directory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType2Directory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubCasioType2Directory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubExifDescriptor">
            <summary>Stub type of com.drew.metadata.exif.ExifDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of ExifDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of ExifDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubExifDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubExifDirectory">
            <summary>Stub type of com.drew.metadata.exif.ExifDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubExifDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubExifInteropDescriptor">
            <summary>Stub type of com.drew.metadata.exif.ExifInteropDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifInteropDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifInteropDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of ExifInteropDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifInteropDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of ExifInteropDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifInteropDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubExifInteropDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifInteropDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifInteropDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifInteropDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubExifInteropDirectory">
            <summary>Stub type of com.drew.metadata.exif.ExifInteropDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifInteropDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifInteropDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubExifInteropDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifInteropDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifInteropDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifInteropDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifInteropDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifInteropDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubExifProcessingException">
            <summary>Stub type of com.drew.metadata.exif.ExifProcessingException</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifProcessingException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifProcessingException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifProcessingException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifProcessingException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubExifProcessingException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifProcessingException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubExifProcessingException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifProcessingException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifProcessingException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifProcessingException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifProcessingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifProcessingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifProcessingException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifProcessingException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifProcessingException.InitializeStub">
            <summary>Initializes a new instance of type StubExifProcessingException</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifProcessingException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifProcessingException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifProcessingException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifProcessingException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifProcessingException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifProcessingException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifProcessingException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifProcessingException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifProcessingException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifProcessingException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifProcessingException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifProcessingException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifProcessingException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifProcessingException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubExifReader">
            <summary>Stub type of com.drew.metadata.exif.ExifReader</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifReader.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifReader.#ctor(System.IO.FileInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifReader.Extract(com.drew.metadata.Metadata)">
            <summary>Sets the stub of ExifReader.Extract(Metadata metadata)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifReader.ExtractMetadata">
            <summary>Sets the stub of ExifReader.Extract(Metadata metadata)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifReader.Get16Bits(System.Int32)">
            <summary>Sets the stub of ExifReader.Get16Bits(Int32 offSet)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifReader.Get16BitsInt32">
            <summary>Sets the stub of ExifReader.Get16Bits(Int32 offSet)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifReader.Get32Bits(System.Int32)">
            <summary>Sets the stub of ExifReader.Get32Bits(Int32 offSet)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubExifReader.Get32BitsInt32">
            <summary>Sets the stub of ExifReader.Get32Bits(Int32 offSet)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubExifReader.InitializeStub">
            <summary>Initializes a new instance of type StubExifReader</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubExifReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubFujifilmDescriptor">
            <summary>Stub type of com.drew.metadata.exif.FujifilmDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubFujifilmDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubFujifilmDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of FujifilmDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubFujifilmDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of FujifilmDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubFujifilmDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubFujifilmDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubFujifilmDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubFujifilmDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubFujifilmDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubFujifilmDirectory">
            <summary>Stub type of com.drew.metadata.exif.FujifilmDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubFujifilmDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubFujifilmDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubFujifilmDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubFujifilmDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubFujifilmDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubFujifilmDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubFujifilmDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubFujifilmDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubGpsDescriptor">
            <summary>Stub type of com.drew.metadata.exif.GpsDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubGpsDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubGpsDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of GpsDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubGpsDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of GpsDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubGpsDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubGpsDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubGpsDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubGpsDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubGpsDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubGpsDirectory">
            <summary>Stub type of com.drew.metadata.exif.GpsDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubGpsDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubGpsDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubGpsDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubGpsDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubGpsDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubGpsDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubGpsDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubGpsDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubKodakDescriptor">
            <summary>Stub type of com.drew.metadata.exif.KodakDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKodakDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKodakDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of KodakDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubKodakDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of KodakDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKodakDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubKodakDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKodakDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKodakDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKodakDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubKodakDirectory">
            <summary>Stub type of com.drew.metadata.exif.KodakDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKodakDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKodakDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubKodakDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKodakDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubKodakDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKodakDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKodakDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKodakDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubKyoceraDescriptor">
            <summary>Stub type of com.drew.metadata.exif.KyoceraDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKyoceraDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKyoceraDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of KyoceraDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubKyoceraDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of KyoceraDescriptor.GetDescription(Int32 aTagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKyoceraDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubKyoceraDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKyoceraDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKyoceraDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKyoceraDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubKyoceraDirectory">
            <summary>Stub type of com.drew.metadata.exif.KyoceraDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKyoceraDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKyoceraDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubKyoceraDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubKyoceraDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubKyoceraDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKyoceraDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKyoceraDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubKyoceraDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubNikonType1Descriptor">
            <summary>Stub type of com.drew.metadata.exif.NikonType1Descriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType1Descriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType1Descriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of NikonType1Descriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubNikonType1Descriptor.GetDescriptionInt32">
            <summary>Sets the stub of NikonType1Descriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType1Descriptor.InitializeStub">
            <summary>Initializes a new instance of type StubNikonType1Descriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType1Descriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType1Descriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType1Descriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubNikonType1Directory">
            <summary>Stub type of com.drew.metadata.exif.NikonType1Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType1Directory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType1Directory.InitializeStub">
            <summary>Initializes a new instance of type StubNikonType1Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType1Directory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubNikonType1Directory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType1Directory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType1Directory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType1Directory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubNikonType2Descriptor">
            <summary>Stub type of com.drew.metadata.exif.NikonType2Descriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType2Descriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType2Descriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of NikonType2Descriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubNikonType2Descriptor.GetDescriptionInt32">
            <summary>Sets the stub of NikonType2Descriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType2Descriptor.InitializeStub">
            <summary>Initializes a new instance of type StubNikonType2Descriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType2Descriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType2Descriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType2Descriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubNikonType2Directory">
            <summary>Stub type of com.drew.metadata.exif.NikonType2Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType2Directory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType2Directory.InitializeStub">
            <summary>Initializes a new instance of type StubNikonType2Directory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubNikonType2Directory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubNikonType2Directory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType2Directory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType2Directory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubNikonType2Directory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubOlympusDescriptor">
            <summary>Stub type of com.drew.metadata.exif.OlympusDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubOlympusDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubOlympusDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of OlympusDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubOlympusDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of OlympusDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubOlympusDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubOlympusDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubOlympusDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubOlympusDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubOlympusDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubOlympusDirectory">
            <summary>Stub type of com.drew.metadata.exif.OlympusDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubOlympusDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubOlympusDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubOlympusDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubOlympusDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubOlympusDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubOlympusDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubOlympusDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubOlympusDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubPanasonicDescriptor">
            <summary>Stub type of com.drew.metadata.exif.PanasonicDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPanasonicDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPanasonicDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of PanasonicDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubPanasonicDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of PanasonicDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPanasonicDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubPanasonicDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPanasonicDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPanasonicDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPanasonicDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubPanasonicDirectory">
            <summary>Stub type of com.drew.metadata.exif.PanasonicDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPanasonicDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPanasonicDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubPanasonicDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPanasonicDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubPanasonicDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPanasonicDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPanasonicDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPanasonicDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubPentaxDescriptor">
            <summary>Stub type of com.drew.metadata.exif.PentaxDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPentaxDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPentaxDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of PentaxDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubPentaxDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of PentaxDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPentaxDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubPentaxDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPentaxDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPentaxDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPentaxDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubPentaxDirectory">
            <summary>Stub type of com.drew.metadata.exif.PentaxDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPentaxDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPentaxDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubPentaxDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubPentaxDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubPentaxDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPentaxDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPentaxDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubPentaxDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubSonyDescriptor">
            <summary>Stub type of com.drew.metadata.exif.SonyDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubSonyDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubSonyDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of SonyDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubSonyDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of SonyDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubSonyDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubSonyDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubSonyDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubSonyDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubSonyDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.exif.Fakes.StubSonyDirectory">
            <summary>Stub type of com.drew.metadata.exif.SonyDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubSonyDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubSonyDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubSonyDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.exif.Fakes.StubSonyDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.exif.Fakes.StubSonyDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubSonyDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubSonyDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.exif.Fakes.StubSonyDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor">
            <summary>Shim type of com.drew.metadata.iptc.IptcDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor.#ctor(com.drew.metadata.iptc.IptcDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of IptcDescriptor.IptcDescriptor(AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of IptcDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor.GetUrgencyDescription">
            <summary>Sets the shim of IptcDescriptor.GetUrgencyDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of IptcDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcDescriptor.AllInstances.GetUrgencyDescription">
            <summary>Sets the shim of IptcDescriptor.GetUrgencyDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.ShimIptcDirectory">
            <summary>Shim type of com.drew.metadata.iptc.IptcDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcDirectory.#ctor(com.drew.metadata.iptc.IptcDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcDirectory.Constructor">
            <summary>Sets the shim of IptcDirectory.IptcDirectory()</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.ShimIptcDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.ShimIptcProcessingException">
            <summary>Shim type of com.drew.metadata.iptc.IptcProcessingException</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcProcessingException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcProcessingException.#ctor(com.drew.metadata.iptc.IptcProcessingException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcProcessingException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcProcessingException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcProcessingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcProcessingException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcProcessingException.ConstructorException">
            <summary>Sets the shim of IptcProcessingException.IptcProcessingException(Exception aCause)</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcProcessingException.ConstructorString">
            <summary>Sets the shim of IptcProcessingException.IptcProcessingException(String aMessage)</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcProcessingException.ConstructorStringException">
            <summary>Sets the shim of IptcProcessingException.IptcProcessingException(String aMessage, Exception aCause)</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.ShimIptcProcessingException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.ShimIptcReader">
            <summary>Shim type of com.drew.metadata.iptc.IptcReader</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcReader.#ctor(com.drew.metadata.iptc.IptcReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.ShimIptcReader.Bind(com.drew.metadata.IMetadataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcReader.ConstructorByteArray">
            <summary>Sets the shim of IptcReader.IptcReader(Byte[] aData)</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcReader.ConstructorFileInfo">
            <summary>Sets the shim of IptcReader.IptcReader(FileInfo aFile)</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcReader.ExtractMetadata">
            <summary>Sets the shim of IptcReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcReader.ProcessTagAbstractDirectoryInt32Int32Int32Int32">
            <summary>Sets the shim of IptcReader.ProcessTag(AbstractDirectory aDirectory, Int32 aDirectoryType, Int32 aTagType, Int32 anOffset, Int32 aTagByteCount)</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.ShimIptcReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcReader.AllInstances.ExtractMetadata">
            <summary>Sets the shim of IptcReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.ShimIptcReader.AllInstances.ProcessTagAbstractDirectoryInt32Int32Int32Int32">
            <summary>Sets the shim of IptcReader.ProcessTag(AbstractDirectory aDirectory, Int32 aDirectoryType, Int32 aTagType, Int32 anOffset, Int32 aTagByteCount)</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.StubIptcDescriptor">
            <summary>Stub type of com.drew.metadata.iptc.IptcDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of IptcDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of IptcDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubIptcDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.StubIptcDirectory">
            <summary>Stub type of com.drew.metadata.iptc.IptcDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubIptcDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.StubIptcProcessingException">
            <summary>Stub type of com.drew.metadata.iptc.IptcProcessingException</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubIptcProcessingException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubIptcProcessingException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.InitializeStub">
            <summary>Initializes a new instance of type StubIptcProcessingException</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcProcessingException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:com.drew.metadata.iptc.Fakes.StubIptcReader">
            <summary>Stub type of com.drew.metadata.iptc.IptcReader</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcReader.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcReader.#ctor(System.IO.FileInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcReader.Extract(com.drew.metadata.Metadata)">
            <summary>Sets the stub of IptcReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcReader.ExtractMetadata">
            <summary>Sets the stub of IptcReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcReader.Get16Bits(System.Int32)">
            <summary>Sets the stub of AbstractMetadataReader.Get16Bits(Int32 anOffset)</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcReader.Get16BitsInt32">
            <summary>Sets the stub of AbstractMetadataReader.Get16Bits(Int32 anOffset)</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcReader.Get32Bits(System.Int32)">
            <summary>Sets the stub of AbstractMetadataReader.Get32Bits(Int32 anOffset)</summary>
        </member>
        <member name="F:com.drew.metadata.iptc.Fakes.StubIptcReader.Get32BitsInt32">
            <summary>Sets the stub of AbstractMetadataReader.Get32Bits(Int32 anOffset)</summary>
        </member>
        <member name="M:com.drew.metadata.iptc.Fakes.StubIptcReader.InitializeStub">
            <summary>Initializes a new instance of type StubIptcReader</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.iptc.Fakes.StubIptcReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDescriptor">
            <summary>Shim type of com.drew.metadata.jpeg.JpegCommentDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDescriptor.#ctor(com.drew.metadata.jpeg.JpegCommentDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of JpegCommentDescriptor.JpegCommentDescriptor(AbstractDirectory directory)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of JpegCommentDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of JpegCommentDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDirectory">
            <summary>Shim type of com.drew.metadata.jpeg.JpegCommentDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDirectory.#ctor(com.drew.metadata.jpeg.JpegCommentDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDirectory.Constructor">
            <summary>Sets the shim of JpegCommentDirectory.JpegCommentDirectory()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDirectory.StaticConstructor">
            <summary>Sets the shim of JpegCommentDirectory.JpegCommentDirectory()</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegCommentDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader">
            <summary>Shim type of com.drew.metadata.jpeg.JpegCommentReader</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader.#ctor(com.drew.metadata.jpeg.JpegCommentReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader.Bind(com.drew.metadata.IMetadataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader.ConstructorByteArray">
            <summary>Sets the shim of JpegCommentReader.JpegCommentReader(Byte[] aData)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader.ConstructorFileInfo">
            <summary>Sets the shim of JpegCommentReader.JpegCommentReader(FileInfo aFile)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader.ExtractMetadata">
            <summary>Sets the shim of JpegCommentReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegCommentReader.AllInstances.ExtractMetadata">
            <summary>Sets the shim of JpegCommentReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegComponent">
            <summary>Shim type of com.drew.metadata.jpeg.JpegComponent</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.#ctor(com.drew.metadata.jpeg.JpegComponent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.ComponentIdGet">
            <summary>Sets the shim of JpegComponent.get_ComponentId()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.ConstructorInt32Int32Int32">
            <summary>Sets the shim of JpegComponent.JpegComponent(Int32 aComponentId, Int32 aSamplingFactorByte, Int32 aQuantizationTableNumber)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.GetComponentName">
            <summary>Sets the shim of JpegComponent.GetComponentName()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.HorizontalSamplingFactorGet">
            <summary>Sets the shim of JpegComponent.get_HorizontalSamplingFactor()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.QuantizationTableNumberGet">
            <summary>Sets the shim of JpegComponent.get_QuantizationTableNumber()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.ToString">
            <summary>Sets the shim of JpegComponent.ToString()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.VerticalSamplingFactorGet">
            <summary>Sets the shim of JpegComponent.get_VerticalSamplingFactor()</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.AllInstances.ComponentIdGet">
            <summary>Sets the shim of JpegComponent.get_ComponentId()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.AllInstances.GetComponentName">
            <summary>Sets the shim of JpegComponent.GetComponentName()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.AllInstances.HorizontalSamplingFactorGet">
            <summary>Sets the shim of JpegComponent.get_HorizontalSamplingFactor()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.AllInstances.QuantizationTableNumberGet">
            <summary>Sets the shim of JpegComponent.get_QuantizationTableNumber()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.AllInstances.ToString01">
            <summary>Sets the shim of JpegComponent.ToString()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegComponent.AllInstances.VerticalSamplingFactorGet">
            <summary>Sets the shim of JpegComponent.get_VerticalSamplingFactor()</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor">
            <summary>Shim type of com.drew.metadata.jpeg.JpegDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.#ctor(com.drew.metadata.jpeg.JpegDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.ConstructorAbstractDirectory">
            <summary>Sets the shim of JpegDescriptor.JpegDescriptor(AbstractDirectory directory)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.GetComponentDataDescriptionInt32">
            <summary>Sets the shim of JpegDescriptor.GetComponentDataDescription(Int32 componentNumber)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.GetDataPrecisionDescription">
            <summary>Sets the shim of JpegDescriptor.GetDataPrecisionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.GetDescriptionInt32">
            <summary>Sets the shim of JpegDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.GetImageHeightDescription">
            <summary>Sets the shim of JpegDescriptor.GetImageHeightDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.GetImageWidthDescription">
            <summary>Sets the shim of JpegDescriptor.GetImageWidthDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.AllInstances.GetComponentDataDescriptionInt32">
            <summary>Sets the shim of JpegDescriptor.GetComponentDataDescription(Int32 componentNumber)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.AllInstances.GetDataPrecisionDescription">
            <summary>Sets the shim of JpegDescriptor.GetDataPrecisionDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.AllInstances.GetDescriptionInt32">
            <summary>Sets the shim of JpegDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.AllInstances.GetImageHeightDescription">
            <summary>Sets the shim of JpegDescriptor.GetImageHeightDescription()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDescriptor.AllInstances.GetImageWidthDescription">
            <summary>Sets the shim of JpegDescriptor.GetImageWidthDescription()</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory">
            <summary>Shim type of com.drew.metadata.jpeg.JpegDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.#ctor(com.drew.metadata.jpeg.JpegDirectory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.Bind(System.Collections.Generic.IEnumerable{com.drew.metadata.Tag})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.Constructor">
            <summary>Sets the shim of JpegDirectory.JpegDirectory()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.GetComponentInt32">
            <summary>Sets the shim of JpegDirectory.GetComponent(Int32 componentNumber)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.GetImageHeight">
            <summary>Sets the shim of JpegDirectory.GetImageHeight()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.GetImageWidth">
            <summary>Sets the shim of JpegDirectory.GetImageWidth()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.GetNumberOfComponents">
            <summary>Sets the shim of JpegDirectory.GetNumberOfComponents()</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.AllInstances.GetComponentInt32">
            <summary>Sets the shim of JpegDirectory.GetComponent(Int32 componentNumber)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.AllInstances.GetImageHeight">
            <summary>Sets the shim of JpegDirectory.GetImageHeight()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.AllInstances.GetImageWidth">
            <summary>Sets the shim of JpegDirectory.GetImageWidth()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegDirectory.AllInstances.GetNumberOfComponents">
            <summary>Sets the shim of JpegDirectory.GetNumberOfComponents()</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegReader">
            <summary>Shim type of com.drew.metadata.jpeg.JpegReader</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegReader.#ctor(com.drew.metadata.jpeg.JpegReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.ShimJpegReader.Bind(com.drew.metadata.IMetadataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegReader.ConstructorByteArray">
            <summary>Sets the shim of JpegReader.JpegReader(Byte[] aData)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegReader.ConstructorFileInfo">
            <summary>Sets the shim of JpegReader.JpegReader(FileInfo aFile)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegReader.ExtractMetadata">
            <summary>Sets the shim of JpegReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.ShimJpegReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.ShimJpegReader.AllInstances.ExtractMetadata">
            <summary>Sets the shim of JpegReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.StubJpegCommentDescriptor">
            <summary>Stub type of com.drew.metadata.jpeg.JpegCommentDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of JpegCommentDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.jpeg.Fakes.StubJpegCommentDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of JpegCommentDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubJpegCommentDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegCommentDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegCommentDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegCommentDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.StubJpegCommentDirectory">
            <summary>Stub type of com.drew.metadata.jpeg.JpegCommentDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubJpegCommentDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.jpeg.Fakes.StubJpegCommentDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegCommentDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegCommentDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegCommentDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader">
            <summary>Stub type of com.drew.metadata.jpeg.JpegCommentReader</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.#ctor(System.IO.FileInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.Extract(com.drew.metadata.Metadata)">
            <summary>Sets the stub of JpegCommentReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="F:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.ExtractMetadata">
            <summary>Sets the stub of JpegCommentReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.Get16Bits(System.Int32)">
            <summary>Sets the stub of AbstractMetadataReader.Get16Bits(Int32 anOffset)</summary>
        </member>
        <member name="F:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.Get16BitsInt32">
            <summary>Sets the stub of AbstractMetadataReader.Get16Bits(Int32 anOffset)</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.Get32Bits(System.Int32)">
            <summary>Sets the stub of AbstractMetadataReader.Get32Bits(Int32 anOffset)</summary>
        </member>
        <member name="F:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.Get32BitsInt32">
            <summary>Sets the stub of AbstractMetadataReader.Get32Bits(Int32 anOffset)</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.InitializeStub">
            <summary>Initializes a new instance of type StubJpegCommentReader</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegCommentReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.StubJpegComponent">
            <summary>Stub type of com.drew.metadata.jpeg.JpegComponent</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegComponent.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegComponent.InitializeStub">
            <summary>Initializes a new instance of type StubJpegComponent</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegComponent.ToString">
            <summary>Sets the stub of JpegComponent.ToString()</summary>
        </member>
        <member name="F:com.drew.metadata.jpeg.Fakes.StubJpegComponent.ToString01">
            <summary>Sets the stub of JpegComponent.ToString()</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegComponent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegComponent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegComponent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.StubJpegDescriptor">
            <summary>Stub type of com.drew.metadata.jpeg.JpegDescriptor</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegDescriptor.#ctor(com.drew.metadata.AbstractDirectory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegDescriptor.GetDescription(System.Int32)">
            <summary>Sets the stub of JpegDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="F:com.drew.metadata.jpeg.Fakes.StubJpegDescriptor.GetDescriptionInt32">
            <summary>Sets the stub of JpegDescriptor.GetDescription(Int32 tagType)</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubJpegDescriptor</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.StubJpegDirectory">
            <summary>Stub type of com.drew.metadata.jpeg.JpegDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegDirectory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegDirectory.InitializeStub">
            <summary>Initializes a new instance of type StubJpegDirectory</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegDirectory.SetIntArray(System.Int32,System.Int32[])">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="F:com.drew.metadata.jpeg.Fakes.StubJpegDirectory.SetIntArrayInt32Int32Array">
            <summary>Sets the stub of AbstractDirectory.SetIntArray(Int32 aTagType, Int32[] someInts)</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegDirectory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegDirectory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegDirectory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.drew.metadata.jpeg.Fakes.StubJpegReader">
            <summary>Stub type of com.drew.metadata.jpeg.JpegReader</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegReader.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegReader.#ctor(System.IO.FileInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegReader.Extract(com.drew.metadata.Metadata)">
            <summary>Sets the stub of JpegReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="F:com.drew.metadata.jpeg.Fakes.StubJpegReader.ExtractMetadata">
            <summary>Sets the stub of JpegReader.Extract(Metadata aMetadata)</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegReader.Get16Bits(System.Int32)">
            <summary>Sets the stub of AbstractMetadataReader.Get16Bits(Int32 anOffset)</summary>
        </member>
        <member name="F:com.drew.metadata.jpeg.Fakes.StubJpegReader.Get16BitsInt32">
            <summary>Sets the stub of AbstractMetadataReader.Get16Bits(Int32 anOffset)</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegReader.Get32Bits(System.Int32)">
            <summary>Sets the stub of AbstractMetadataReader.Get32Bits(Int32 anOffset)</summary>
        </member>
        <member name="F:com.drew.metadata.jpeg.Fakes.StubJpegReader.Get32BitsInt32">
            <summary>Sets the stub of AbstractMetadataReader.Get32Bits(Int32 anOffset)</summary>
        </member>
        <member name="M:com.drew.metadata.jpeg.Fakes.StubJpegReader.InitializeStub">
            <summary>Initializes a new instance of type StubJpegReader</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.drew.metadata.jpeg.Fakes.StubJpegReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.test.resources.Fakes.ShimTestAllKeyWords">
            <summary>Shim type of com.test.resources.TestAllKeyWords</summary>
        </member>
        <member name="M:com.test.resources.Fakes.ShimTestAllKeyWords.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.test.resources.Fakes.ShimTestAllKeyWords.#ctor(com.test.resources.TestAllKeyWords)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.test.resources.Fakes.ShimTestAllKeyWords.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.test.resources.Fakes.ShimTestAllKeyWords.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.test.resources.Fakes.ShimTestAllKeyWords.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.test.resources.Fakes.ShimTestAllKeyWords.Constructor">
            <summary>Sets the shim of TestAllKeyWords.TestAllKeyWords()</summary>
        </member>
        <member name="T:com.test.resources.Fakes.ShimTestAllKeyWords.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.utils.Fakes.ShimUtils">
            <summary>Shim type of com.utils.Utils</summary>
        </member>
        <member name="M:com.utils.Fakes.ShimUtils.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.utils.Fakes.ShimUtils.#ctor(com.utils.Utils)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.utils.Fakes.ShimUtils.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.utils.Fakes.ShimUtils.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.utils.Fakes.ShimUtils.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.utils.Fakes.ShimUtils.Constructor">
            <summary>Sets the shim of Utils.Utils()</summary>
        </member>
        <member name="P:com.utils.Fakes.ShimUtils.DecodeByteArrayBoolean">
            <summary>Sets the shim of Utils.Decode(Byte[] anArray, Boolean removeSpace)</summary>
        </member>
        <member name="P:com.utils.Fakes.ShimUtils.DecodeByteArrayInt32Int32Boolean">
            <summary>Sets the shim of Utils.Decode(Byte[] anArray, Int32 offset, Int32 length, Boolean removeSpace)</summary>
        </member>
        <member name="P:com.utils.Fakes.ShimUtils.SearchAllFileInStringBooleanString">
            <summary>Sets the shim of Utils.SearchAllFileIn(String aRootDirectory, Boolean doRecurse, String aSearchPattern)</summary>
        </member>
        <member name="T:com.utils.Fakes.ShimUtils.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.utils.bundle.Fakes.ShimMissingResourceException">
            <summary>Shim type of com.utils.bundle.MissingResourceException</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimMissingResourceException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimMissingResourceException.#ctor(com.utils.bundle.MissingResourceException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimMissingResourceException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimMissingResourceException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimMissingResourceException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimMissingResourceException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimMissingResourceException.ConstructorException">
            <summary>Sets the shim of MissingResourceException.MissingResourceException(Exception cause)</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimMissingResourceException.ConstructorString">
            <summary>Sets the shim of MissingResourceException.MissingResourceException(String message)</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimMissingResourceException.ConstructorStringException">
            <summary>Sets the shim of MissingResourceException.MissingResourceException(String message, Exception cause)</summary>
        </member>
        <member name="T:com.utils.bundle.Fakes.ShimMissingResourceException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.utils.bundle.Fakes.ShimResourceBundleFactory">
            <summary>Shim type of com.utils.bundle.ResourceBundleFactory</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimResourceBundleFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimResourceBundleFactory.#ctor(com.utils.bundle.ResourceBundleFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimResourceBundleFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimResourceBundleFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimResourceBundleFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimResourceBundleFactory.Constructor">
            <summary>Sets the shim of ResourceBundleFactory.ResourceBundleFactory()</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimResourceBundleFactory.CreateBundleStringCultureInfoInt32">
            <summary>Sets the shim of ResourceBundleFactory.CreateBundle(String aName, CultureInfo aCulturalInfo, Int32 aType)</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimResourceBundleFactory.CreateDefaultBundleString">
            <summary>Sets the shim of ResourceBundleFactory.CreateDefaultBundle(String aName)</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimResourceBundleFactory.CreateDefaultBundleStringCultureInfo">
            <summary>Sets the shim of ResourceBundleFactory.CreateDefaultBundle(String aName, CultureInfo aCulturalInfo)</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimResourceBundleFactory.StaticConstructor">
            <summary>Sets the shim of ResourceBundleFactory.ResourceBundleFactory()</summary>
        </member>
        <member name="T:com.utils.bundle.Fakes.ShimResourceBundleFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.utils.bundle.Fakes.ShimSpecialResourceWriter">
            <summary>Shim type of com.utils.bundle.SpecialResourceWriter</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimSpecialResourceWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimSpecialResourceWriter.#ctor(com.utils.bundle.SpecialResourceWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimSpecialResourceWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.ShimSpecialResourceWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimSpecialResourceWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.ShimSpecialResourceWriter.Constructor">
            <summary>Sets the shim of SpecialResourceWriter.SpecialResourceWriter()</summary>
        </member>
        <member name="T:com.utils.bundle.Fakes.ShimSpecialResourceWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:com.utils.bundle.Fakes.StubIResourceBundle">
            <summary>Stub type of com.utils.bundle.IResourceBundle</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubIResourceBundle.#ctor">
            <summary>Initializes a new instance of type StubIResourceBundle</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubIResourceBundle.AttachBackingFieldToFullname">
            <summary>Attaches delegates to emulate StubIResourceBundle.Fullname as a property with a backing field.</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubIResourceBundle.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIResourceBundle.Name as a property with a backing field.</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubIResourceBundle.EntriesGet">
            <summary>Sets the stub of IResourceBundle.get_Entries()</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubIResourceBundle.FullnameGet">
            <summary>Sets the stub of IResourceBundle.get_Fullname()</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubIResourceBundle.FullnameSetString">
            <summary>Sets the stub of IResourceBundle.set_Fullname(String value)</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubIResourceBundle.ItemGetString">
            <summary>Sets the stub of IResourceBundle.get_Item(String aKey)</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubIResourceBundle.ItemGetStringString">
            <summary>Sets the stub of IResourceBundle.get_Item(String aKey, String fillGapWith)</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubIResourceBundle.ItemGetStringStringArray">
            <summary>Sets the stub of IResourceBundle.get_Item(String aKey, String[] fillGapWith)</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubIResourceBundle.ItemGetStringStringString">
            <summary>Sets the stub of IResourceBundle.get_Item(String aKey, String fillGap0, String fillGap1)</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubIResourceBundle.NameGet">
            <summary>Sets the stub of IResourceBundle.get_Name()</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubIResourceBundle.NameSetString">
            <summary>Sets the stub of IResourceBundle.set_Name(String value)</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubIResourceBundle.mde::com#utils#bundle#IResourceBundle#Entries">
            <summary>Sets the stub of IResourceBundle.get_Entries()</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubIResourceBundle.mde::com#utils#bundle#IResourceBundle#Fullname">
            <summary>Sets the stub of IResourceBundle.get_Fullname()</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubIResourceBundle.com#utils#bundle#IResourceBundle#Item(System.String)">
            <summary>Sets the stub of IResourceBundle.get_Item(String aKey)</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubIResourceBundle.com#utils#bundle#IResourceBundle#Item(System.String,System.String)">
            <summary>Sets the stub of IResourceBundle.get_Item(String aKey, String fillGapWith)</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubIResourceBundle.com#utils#bundle#IResourceBundle#Item(System.String,System.String[])">
            <summary>Sets the stub of IResourceBundle.get_Item(String aKey, String[] fillGapWith)</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubIResourceBundle.com#utils#bundle#IResourceBundle#Item(System.String,System.String,System.String)">
            <summary>Sets the stub of IResourceBundle.get_Item(String aKey, String fillGap0, String fillGap1)</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubIResourceBundle.mde::com#utils#bundle#IResourceBundle#Name">
            <summary>Sets the stub of IResourceBundle.get_Name()</summary>
        </member>
        <member name="T:com.utils.bundle.Fakes.StubMissingResourceException">
            <summary>Stub type of com.utils.bundle.MissingResourceException</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubMissingResourceException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubMissingResourceException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubMissingResourceException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubMissingResourceException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMissingResourceException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubMissingResourceException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMissingResourceException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubMissingResourceException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubMissingResourceException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubMissingResourceException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubMissingResourceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubMissingResourceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubMissingResourceException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubMissingResourceException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubMissingResourceException.InitializeStub">
            <summary>Initializes a new instance of type StubMissingResourceException</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubMissingResourceException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubMissingResourceException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubMissingResourceException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubMissingResourceException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:com.utils.bundle.Fakes.StubMissingResourceException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:com.utils.bundle.Fakes.StubMissingResourceException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubMissingResourceException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubMissingResourceException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubMissingResourceException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubMissingResourceException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubMissingResourceException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubMissingResourceException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubMissingResourceException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:com.utils.bundle.Fakes.StubMissingResourceException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler">
            <summary>Shim type of com.utils.xml.TxtOutPutStreamHandler</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.#ctor(com.utils.xml.TxtOutPutStreamHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.Bind(com.utils.xml.IOutPutTextStreamHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AsText">
            <summary>Sets the shim of TxtOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.BuildForbidenChar">
            <summary>Sets the shim of TxtOutPutStreamHandler.BuildForbidenChar()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.Constructor">
            <summary>Sets the shim of TxtOutPutStreamHandler.TxtOutPutStreamHandler()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.ConstructorMetadata">
            <summary>Sets the shim of TxtOutPutStreamHandler.TxtOutPutStreamHandler(Metadata aMetadata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.CreateDirectoryStringBuilderAbstractDirectory">
            <summary>Sets the shim of TxtOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.CreateTagStringBuilderTag">
            <summary>Sets the shim of TxtOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.DoUnknownGet">
            <summary>Sets the shim of TxtOutPutStreamHandler.get_DoUnknown()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.DoUnknownSetBoolean">
            <summary>Sets the shim of TxtOutPutStreamHandler.set_DoUnknown(Boolean value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.EndTextStreamStringBuilderStringArray">
            <summary>Sets the shim of TxtOutPutStreamHandler.EndTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.MetadataGet">
            <summary>Sets the shim of TxtOutPutStreamHandler.get_Metadata()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.MetadataSetMetadata">
            <summary>Sets the shim of TxtOutPutStreamHandler.set_Metadata(Metadata value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.NormalizeStringBuilderStringBoolean">
            <summary>Sets the shim of TxtOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.StartTextStreamStringBuilderStringArray">
            <summary>Sets the shim of TxtOutPutStreamHandler.StartTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.StaticConstructor">
            <summary>Sets the shim of TxtOutPutStreamHandler.TxtOutPutStreamHandler()</summary>
        </member>
        <member name="T:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AllInstances.AsText">
            <summary>Sets the shim of TxtOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AllInstances.CreateDirectoryStringBuilderAbstractDirectory">
            <summary>Sets the shim of TxtOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AllInstances.CreateTagStringBuilderTag">
            <summary>Sets the shim of TxtOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AllInstances.DoUnknownGet">
            <summary>Sets the shim of TxtOutPutStreamHandler.get_DoUnknown()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AllInstances.DoUnknownSetBoolean">
            <summary>Sets the shim of TxtOutPutStreamHandler.set_DoUnknown(Boolean value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AllInstances.EndTextStreamStringBuilderStringArray">
            <summary>Sets the shim of TxtOutPutStreamHandler.EndTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AllInstances.MetadataGet">
            <summary>Sets the shim of TxtOutPutStreamHandler.get_Metadata()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AllInstances.MetadataSetMetadata">
            <summary>Sets the shim of TxtOutPutStreamHandler.set_Metadata(Metadata value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AllInstances.NormalizeStringBuilderStringBoolean">
            <summary>Sets the shim of TxtOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimTxtOutPutStreamHandler.AllInstances.StartTextStreamStringBuilderStringArray">
            <summary>Sets the shim of TxtOutPutStreamHandler.StartTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="T:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler">
            <summary>Shim type of com.utils.xml.XmlNewOutPutStreamHandler</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.#ctor(com.utils.xml.XmlNewOutPutStreamHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.Bind(com.utils.xml.IOutPutTextStreamHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AsText">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.BuildForbidenChar">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.BuildForbidenChar()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.CloseStringBuilderStringBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.Close(StringBuilder aBuff, String aTag, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.Constructor">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.XmlNewOutPutStreamHandler()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.ConstructorMetadata">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.XmlNewOutPutStreamHandler(Metadata aMetadata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.CreateDirectoryStringBuilderAbstractDirectory">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.CreateTagStringBuilderTag">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.DoUnknownGet">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.get_DoUnknown()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.DoUnknownSetBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.set_DoUnknown(Boolean value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.DtdFileNameGet">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.get_DtdFileName()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.DtdFileNameSetString">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.set_DtdFileName(String value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.EndTextStreamStringBuilderStringArray">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.EndTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.LoadDtd">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.LoadDtd()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.MetadataGet">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.get_Metadata()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.MetadataSetMetadata">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.set_Metadata(Metadata value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.NormalizeStringBuilderStringBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.OpenStringBuilderStringBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.Open(StringBuilder aBuff, String aTagName, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.OpenStringBuilderStringStringObjectBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.Open(StringBuilder aBuff, String aTagName, String attName1, Object attValue1, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.OpenStringBuilderStringStringObjectStringObjectBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.Open(StringBuilder aBuff, String aTagName, String attName1, Object attValue1, String attName2, Object attValue2, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.StartTextStreamStringBuilderStringArray">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.StartTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.StaticConstructor">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.XmlNewOutPutStreamHandler()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.UseCDDataGet">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.get_UseCDData()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.UseCDDataSetBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.set_UseCDData(Boolean value)</summary>
        </member>
        <member name="T:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.AsText">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.CloseStringBuilderStringBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.Close(StringBuilder aBuff, String aTag, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.CreateDirectoryStringBuilderAbstractDirectory">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.CreateTagStringBuilderTag">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.DoUnknownGet">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.get_DoUnknown()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.DoUnknownSetBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.set_DoUnknown(Boolean value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.DtdFileNameGet">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.get_DtdFileName()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.DtdFileNameSetString">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.set_DtdFileName(String value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.EndTextStreamStringBuilderStringArray">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.EndTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.LoadDtd">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.LoadDtd()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.MetadataGet">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.get_Metadata()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.MetadataSetMetadata">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.set_Metadata(Metadata value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.NormalizeStringBuilderStringBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.OpenStringBuilderStringBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.Open(StringBuilder aBuff, String aTagName, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.OpenStringBuilderStringStringObjectBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.Open(StringBuilder aBuff, String aTagName, String attName1, Object attValue1, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.OpenStringBuilderStringStringObjectStringObjectBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.Open(StringBuilder aBuff, String aTagName, String attName1, Object attValue1, String attName2, Object attValue2, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.StartTextStreamStringBuilderStringArray">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.StartTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.UseCDDataGet">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.get_UseCDData()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlNewOutPutStreamHandler.AllInstances.UseCDDataSetBoolean">
            <summary>Sets the shim of XmlNewOutPutStreamHandler.set_UseCDData(Boolean value)</summary>
        </member>
        <member name="T:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler">
            <summary>Shim type of com.utils.xml.XmlOutPutStreamHandler</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.#ctor(com.utils.xml.XmlOutPutStreamHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.Bind(com.utils.xml.IOutPutTextStreamHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AsText">
            <summary>Sets the shim of XmlOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.BuildForbidenChar">
            <summary>Sets the shim of XmlOutPutStreamHandler.BuildForbidenChar()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.CloseStringBuilderStringBoolean">
            <summary>Sets the shim of XmlOutPutStreamHandler.Close(StringBuilder aBuff, String aTag, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.Constructor">
            <summary>Sets the shim of XmlOutPutStreamHandler.XmlOutPutStreamHandler()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.ConstructorMetadata">
            <summary>Sets the shim of XmlOutPutStreamHandler.XmlOutPutStreamHandler(Metadata aMetadata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.CreateDirectoryStringBuilderAbstractDirectory">
            <summary>Sets the shim of XmlOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.CreateTagStringBuilderTag">
            <summary>Sets the shim of XmlOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.DoUnknownGet">
            <summary>Sets the shim of XmlOutPutStreamHandler.get_DoUnknown()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.DoUnknownSetBoolean">
            <summary>Sets the shim of XmlOutPutStreamHandler.set_DoUnknown(Boolean value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.DtdFileNameGet">
            <summary>Sets the shim of XmlOutPutStreamHandler.get_DtdFileName()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.DtdFileNameSetString">
            <summary>Sets the shim of XmlOutPutStreamHandler.set_DtdFileName(String value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.EndTextStreamStringBuilderStringArray">
            <summary>Sets the shim of XmlOutPutStreamHandler.EndTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.LoadDtd">
            <summary>Sets the shim of XmlOutPutStreamHandler.LoadDtd()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.MetadataGet">
            <summary>Sets the shim of XmlOutPutStreamHandler.get_Metadata()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.MetadataSetMetadata">
            <summary>Sets the shim of XmlOutPutStreamHandler.set_Metadata(Metadata value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.NormalizeStringBuilderStringBoolean">
            <summary>Sets the shim of XmlOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.OpenStringBuilderStringBoolean">
            <summary>Sets the shim of XmlOutPutStreamHandler.Open(StringBuilder aBuff, String aTag, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.OpenStringBuilderStringStringObjectBoolean">
            <summary>Sets the shim of XmlOutPutStreamHandler.Open(StringBuilder aBuff, String aTagName, String attName1, Object attValue1, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.StartTextStreamStringBuilderStringArray">
            <summary>Sets the shim of XmlOutPutStreamHandler.StartTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.StaticConstructor">
            <summary>Sets the shim of XmlOutPutStreamHandler.XmlOutPutStreamHandler()</summary>
        </member>
        <member name="T:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.AsText">
            <summary>Sets the shim of XmlOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.CloseStringBuilderStringBoolean">
            <summary>Sets the shim of XmlOutPutStreamHandler.Close(StringBuilder aBuff, String aTag, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.CreateDirectoryStringBuilderAbstractDirectory">
            <summary>Sets the shim of XmlOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.CreateTagStringBuilderTag">
            <summary>Sets the shim of XmlOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.DoUnknownGet">
            <summary>Sets the shim of XmlOutPutStreamHandler.get_DoUnknown()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.DoUnknownSetBoolean">
            <summary>Sets the shim of XmlOutPutStreamHandler.set_DoUnknown(Boolean value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.DtdFileNameGet">
            <summary>Sets the shim of XmlOutPutStreamHandler.get_DtdFileName()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.DtdFileNameSetString">
            <summary>Sets the shim of XmlOutPutStreamHandler.set_DtdFileName(String value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.EndTextStreamStringBuilderStringArray">
            <summary>Sets the shim of XmlOutPutStreamHandler.EndTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.LoadDtd">
            <summary>Sets the shim of XmlOutPutStreamHandler.LoadDtd()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.MetadataGet">
            <summary>Sets the shim of XmlOutPutStreamHandler.get_Metadata()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.MetadataSetMetadata">
            <summary>Sets the shim of XmlOutPutStreamHandler.set_Metadata(Metadata value)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.NormalizeStringBuilderStringBoolean">
            <summary>Sets the shim of XmlOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.OpenStringBuilderStringBoolean">
            <summary>Sets the shim of XmlOutPutStreamHandler.Open(StringBuilder aBuff, String aTag, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.OpenStringBuilderStringStringObjectBoolean">
            <summary>Sets the shim of XmlOutPutStreamHandler.Open(StringBuilder aBuff, String aTagName, String attName1, Object attValue1, Boolean isNewLine)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.ShimXmlOutPutStreamHandler.AllInstances.StartTextStreamStringBuilderStringArray">
            <summary>Sets the shim of XmlOutPutStreamHandler.StartTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="T:com.utils.xml.Fakes.StubIOutPutTextStreamHandler">
            <summary>Stub type of com.utils.xml.IOutPutTextStreamHandler</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.#ctor">
            <summary>Initializes a new instance of type StubIOutPutTextStreamHandler</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.AsText">
            <summary>Sets the stub of IOutPutTextStreamHandler.AsText()</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.AttachBackingFieldToDoUnknown">
            <summary>Attaches delegates to emulate StubIOutPutTextStreamHandler.DoUnknown as a property with a backing field.</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.AttachBackingFieldToMetadata">
            <summary>Attaches delegates to emulate StubIOutPutTextStreamHandler.Metadata as a property with a backing field.</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.DoUnknownGet">
            <summary>Sets the stub of IOutPutTextStreamHandler.get_DoUnknown()</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.DoUnknownSetBoolean">
            <summary>Sets the stub of IOutPutTextStreamHandler.set_DoUnknown(Boolean value)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.EndTextStreamStringBuilderStringArray">
            <summary>Sets the stub of IOutPutTextStreamHandler.EndTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.MetadataGet">
            <summary>Sets the stub of IOutPutTextStreamHandler.get_Metadata()</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.MetadataSetMetadata">
            <summary>Sets the stub of IOutPutTextStreamHandler.set_Metadata(Metadata value)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.NormalizeStringBuilderStringBoolean">
            <summary>Sets the stub of IOutPutTextStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useSpecific)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.StartTextStreamStringBuilderStringArray">
            <summary>Sets the stub of IOutPutTextStreamHandler.StartTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.mde::com#utils#xml#IOutPutTextStreamHandler#AsText">
            <summary>Sets the stub of IOutPutTextStreamHandler.AsText()</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.mde::com#utils#xml#IOutPutTextStreamHandler#EndTextStream(System.Text.StringBuilder,System.String[])">
            <summary>Sets the stub of IOutPutTextStreamHandler.EndTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.mde::com#utils#xml#IOutPutTextStreamHandler#Normalize(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>Sets the stub of IOutPutTextStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useSpecific)</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.mde::com#utils#xml#IOutPutTextStreamHandler#StartTextStream(System.Text.StringBuilder,System.String[])">
            <summary>Sets the stub of IOutPutTextStreamHandler.StartTextStream(StringBuilder aBuff, String[] someParam)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.mde::com#utils#xml#IOutPutTextStreamHandler#DoUnknown">
            <summary>Sets the stub of IOutPutTextStreamHandler.get_DoUnknown()</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.StubIOutPutTextStreamHandler.mde::com#utils#xml#IOutPutTextStreamHandler#Metadata">
            <summary>Sets the stub of IOutPutTextStreamHandler.get_Metadata()</summary>
        </member>
        <member name="T:com.utils.xml.Fakes.StubTxtOutPutStreamHandler">
            <summary>Stub type of com.utils.xml.TxtOutPutStreamHandler</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.#ctor(com.drew.metadata.Metadata)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.AsText">
            <summary>Sets the stub of TxtOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.AsText01">
            <summary>Sets the stub of TxtOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.CreateDirectory(System.Text.StringBuilder,com.drew.metadata.AbstractDirectory)">
            <summary>Sets the stub of TxtOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.CreateDirectoryStringBuilderAbstractDirectory">
            <summary>Sets the stub of TxtOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.CreateTag(System.Text.StringBuilder,com.drew.metadata.Tag)">
            <summary>Sets the stub of TxtOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.CreateTagStringBuilderTag">
            <summary>Sets the stub of TxtOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.InitializeStub">
            <summary>Initializes a new instance of type StubTxtOutPutStreamHandler</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.Normalize(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>Sets the stub of TxtOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.NormalizeStringBuilderStringBoolean">
            <summary>Sets the stub of TxtOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.StubTxtOutPutStreamHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler">
            <summary>Stub type of com.utils.xml.XmlNewOutPutStreamHandler</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.#ctor(com.drew.metadata.Metadata)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.AsText">
            <summary>Sets the stub of XmlNewOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.AsText01">
            <summary>Sets the stub of XmlNewOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.CreateDirectory(System.Text.StringBuilder,com.drew.metadata.AbstractDirectory)">
            <summary>Sets the stub of XmlNewOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.CreateDirectoryStringBuilderAbstractDirectory">
            <summary>Sets the stub of XmlNewOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.CreateTag(System.Text.StringBuilder,com.drew.metadata.Tag)">
            <summary>Sets the stub of XmlNewOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.CreateTagStringBuilderTag">
            <summary>Sets the stub of XmlNewOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.InitializeStub">
            <summary>Initializes a new instance of type StubXmlNewOutPutStreamHandler</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.Normalize(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>Sets the stub of XmlNewOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.NormalizeStringBuilderStringBoolean">
            <summary>Sets the stub of XmlNewOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.StubXmlNewOutPutStreamHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:com.utils.xml.Fakes.StubXmlOutPutStreamHandler">
            <summary>Stub type of com.utils.xml.XmlOutPutStreamHandler</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.#ctor(com.drew.metadata.Metadata)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.AsText">
            <summary>Sets the stub of XmlOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.AsText01">
            <summary>Sets the stub of XmlOutPutStreamHandler.AsText()</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.CreateDirectory(System.Text.StringBuilder,com.drew.metadata.AbstractDirectory)">
            <summary>Sets the stub of XmlOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.CreateDirectoryStringBuilderAbstractDirectory">
            <summary>Sets the stub of XmlOutPutStreamHandler.CreateDirectory(StringBuilder aBuff, AbstractDirectory aDirectory)</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.CreateTag(System.Text.StringBuilder,com.drew.metadata.Tag)">
            <summary>Sets the stub of XmlOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.CreateTagStringBuilderTag">
            <summary>Sets the stub of XmlOutPutStreamHandler.CreateTag(StringBuilder aBuff, Tag aTag)</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.InitializeStub">
            <summary>Initializes a new instance of type StubXmlOutPutStreamHandler</summary>
        </member>
        <member name="M:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.Normalize(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>Sets the stub of XmlOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="F:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.NormalizeStringBuilderStringBoolean">
            <summary>Sets the stub of XmlOutPutStreamHandler.Normalize(StringBuilder aBuff, String aValue, Boolean useCdata)</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:com.utils.xml.Fakes.StubXmlOutPutStreamHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
